// src/data/translations.ts
export const translations = {
  en: {
    title: "üõ† DevTools Hub",
    description:
      "A collection of simple and fast tools for developers & creators",
    searchPlaceholder: "Search tools...",
    noResults: "No results found.",
    tools: [
      {
        href: "/ascii-to-text",
        label: "ASCII ‚Üí Text Converter",
        desc: "Convert ASCII codes to text",
        keywords: [
          "ascii",
          "text",
          "convert",
          "ascii to text",
          "character",
          "code",
        ],
      },
      {
        href: "/text-to-ascii",
        label: "Text ‚Üí ASCII Converter",
        desc: "Convert text to ASCII codes",
        keywords: [
          "text",
          "ascii",
          "convert",
          "text to ascii",
          "character",
          "code",
        ],
      },
      {
        href: "/base64",
        label: "Base64 Encode/Decode",
        desc: "Convert text to Base64 and back",
        keywords: ["base64", "encode", "decode", "convert", "string", "text"],
      },
      {
        href: "/url-encode",
        label: "URL Encode/Decode",
        desc: "Convert text to URL safe string and back",
        keywords: ["url", "encode", "decode", "percent", "convert", "string"],
      },
      {
        href: "/uuid-generator",
        label: "UUID Generator",
        desc: "Generate random UUID (v1,v3,v4,v5)",
        keywords: [
          "uuid",
          "generate",
          "v1",
          "v3",
          "v4",
          "v5",
          "random",
          "unique id",
        ],
      },
      {
        href: "/timestamp",
        label: "Timestamp Converter",
        desc: "Unix timestamp ‚Üî Date conversion",
        keywords: ["timestamp", "unix", "date", "convert", "time", "datetime"],
      },
      {
        href: "/slugify",
        label: "Slugify Converter",
        desc: "Convert string to URL slug",
        keywords: ["slug", "slugify", "convert", "url", "string", "seo"],
      },
      {
        href: "/word-counter",
        label: "Word & Char Counter",
        desc: "Count words and characters",
        keywords: ["word", "character", "count", "counter", "text", "length"],
      },
      {
        href: "/color-converter",
        label: "HEX ‚Üî RGB Converter",
        desc: "Color code conversion",
        keywords: ["hex", "rgb", "color", "convert", "code", "palette"],
      },
      {
        href: "/case-converter",
        label: "Case Converter",
        desc: "Uppercase, snake_case, camelCase, etc.",
        keywords: [
          "case",
          "convert",
          "uppercase",
          "lowercase",
          "camel",
          "snake",
          "kebab",
        ],
      },
      {
        href: "/hash-generator",
        label: "SHA-256 Hash Generator",
        desc: "Generate hash value from string",
        keywords: [
          "sha256",
          "hash",
          "generate",
          "encrypt",
          "string",
          "checksum",
        ],
      },
      {
        href: "/base-converter",
        label: "Base Converter",
        desc: "Convert between decimal, binary, hex",
        keywords: ["base", "convert", "decimal", "binary", "hex", "number"],
      },
      {
        href: "/random-password",
        label: "Password Generator",
        desc: "Generate random passwords",
        keywords: [
          "password",
          "generate",
          "random",
          "secure",
          "strong",
          "generator",
        ],
      },
      {
        href: "/html-entities",
        label: "HTML Entities Converter",
        desc: "Encode/decode HTML special characters",
        keywords: [
          "html",
          "entities",
          "encode",
          "decode",
          "special character",
          "convert",
        ],
      },
      {
        href: "/json-formatter",
        label: "JSON Formatter",
        desc: "Format and sort JSON data",
        keywords: ["json", "format", "pretty", "sort", "parse", "data"],
      },
      {
        href: "/qr-code",
        label: "QR Code Generator",
        desc: "Convert text into a QR code and save",
        keywords: ["qr", "code", "generate", "text", "image", "scanner"],
      },
      {
        href: "/regex-tester",
        label: "Regex Tester",
        desc: "Test your regular expressions live",
        keywords: [
          "regex",
          "regular expression",
          "test",
          "pattern",
          "validate",
          "match",
        ],
      },
      {
        href: "/lorem-ipsum",
        label: "Lorem Ipsum Generator",
        desc: "Generate placeholder dummy text",
        keywords: [
          "lorem",
          "ipsum",
          "dummy",
          "text",
          "generate",
          "placeholder",
        ],
      },
      {
        href: "/wiki-summary",
        label: "Wikipedia Summarizer",
        desc: "Quickly get a summary of Wikipedia articles",
        keywords: [
          "wikipedia",
          "summary",
          "summarize",
          "article",
          "wiki",
          "extract",
        ],
      },
      {
        href: "/time-diff",
        label: "Time Difference Calculator",
        desc: "Calculate difference between two dates/timestamps",
        keywords: [
          "time",
          "difference",
          "date",
          "timestamp",
          "calculate",
          "interval",
        ],
      },
      {
        href: "/diff-checker",
        label: "Text Diff Checker",
        desc: "Compare two pieces of text",
        keywords: [
          "diff",
          "compare",
          "text",
          "difference",
          "checker",
          "change",
        ],
      },
      {
        href: "/markdown-html",
        label: "Markdown ‚Üî HTML Converter",
        desc: "Convert Markdown to HTML and vice versa",
        keywords: ["markdown", "html", "convert", "markup", "parser", "editor"],
      },
      {
        href: "/jwt-encoder-decoder",
        label: "JWT Decoder/Encoder",
        desc: "Decode JWT tokens and encode JSON to JWT format (signature excluded)",
        keywords: [
          "jwt",
          "token",
          "decode",
          "encode",
          "json",
          "header",
          "payload",
        ],
      },
      {
        href: "/css-color-palette",
        label: "CSS Color Palette Generator",
        desc: "Generate CSS color palettes from base colors",
        keywords: ["css", "color", "palette", "generate", "style", "design"],
      },
      {
        href: "/csv-json",
        label: "CSV ‚Üî JSON Converter",
        desc: "Convert between CSV and JSON formats",
        keywords: ["csv", "json", "convert", "format", "data", "parse"],
      },
      {
        href: "/html-table-generator",
        label: "HTML Table Generator",
        desc: "Create HTML tables from input data",
        keywords: ["html", "table", "generate", "markup", "data", "convert"],
      },
      {
        href: "/http-status",
        label: "HTTP Status Code Explainer",
        desc: "Provides explanations for HTTP status codes",
        keywords: [
          "http",
          "status code",
          "explainer",
          "response",
          "error",
          "meaning",
        ],
      },
      {
        href: "/url-query-parser",
        label: "URL Query Parser/Builder",
        desc: "Parse and build URL query strings",
        keywords: ["url", "query", "parse", "build", "parameter", "string"],
      },
      {
        href: "/uuid-validator",
        label: "UUID Validator",
        desc: "Validate if a string is a correct UUID",
        keywords: ["uuid", "validate", "validator", "check", "format", "id"],
      },
      {
        href: "/escape-converter",
        label: "Escape Converter",
        desc: "Convert strings into escape characters",
        keywords: ["escape", "characters", "string", "converter"],
      },
    ],
    allToolsTitle: "All Tools",
    tutorialTitle: "How to Use",
    tutorialSteps: [
      "Search or select the tool you want.",
      "Enter your input data.",
      "Click the convert/validate button.",
      "Copy and use the result.",
      "Change the site language from the üåê Language menu.",
      "Check the FAQ section for common questions.",
    ],
    faqTitle: "FAQ",
    faq: [
      { q: "Is this site free to use?", a: "Yes, it‚Äôs completely free." },
      {
        q: "Can I use it on mobile?",
        a: "Yes, the site is fully responsive and works on mobile.",
      },
      {
        q: "Do I need to sign up to use the tools?",
        a: "No, you can use all the tools without creating an account.",
      },
      {
        q: "Are my inputs and data saved?",
        a: "No, everything runs locally in your browser. We don‚Äôt store any data.",
      },
      {
        q: "Can I share the results with others?",
        a: "Yes, you can copy the results and share them freely.",
      },
      {
        q: "Will more tools be added in the future?",
        a: "Yes, we plan to continuously add new utilities and improvements.",
      },
    ],
    asciiToText: {
      title: "ASCII ‚Üí Text Converter",
      placeholder: "e.g. 72 101 108 108 111",
      button: "Convert",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the ASCII codes you want to convert. (e.g., 72 101 108 108 111)",
          "You can separate numbers with spaces, commas, or semicolons.",
          'Click the "Convert" button to turn the ASCII codes into text.',
          "Use the copy button next to the result to copy the text.",
          'Click "Reset" to clear both the input and the result.',
        ],
      },
    },
    baseConverter: {
      title: "Base Converter",
      inputBaseLabel: "Select Input Base",
      inputPlaceholder: "Enter value",
      convertButton: "Convert",
      errorInvalidInput: "Input does not match the selected base.",
      options: {
        "2": "Binary",
        "8": "Octal",
        "10": "Decimal",
        "16": "Hexadecimal",
        "32": "Base32",
      },
      resultLabels: {
        binary: "Binary",
        octal: "Octal",
        decimal: "Decimal",
        hex: "Hexadecimal",
        base32: "Base32",
      },
      invalidValue: "‚ùå Invalid input",
      tutorial: {
        title: "How to Use",
        steps: [
          "Select the input base (2, 8, 10, 16, or 32).",
          "Enter a number that matches the selected base.",
          "Click the 'Convert' button to see the results in binary, octal, decimal, hexadecimal, and base32.",
          "Use the copy button next to each result to copy it to your clipboard.",
          "Click the 'Reset' button to clear all inputs and results.",
        ],
      },
    },
    base64EncoderDecoder: {
      title: "Base64 Encode/Decode",
      inputPlaceholder: "Enter string to encode/decode",
      encodeButton: "Encode",
      decodeButton: "Decode",
      encodeResultLabel: "Encoded Result",
      decodeResultLabel: "Decoded Result",
      encodeError: "‚ö†Ô∏è Encoding failed (check valid string)",
      decodeError: "‚ö†Ô∏è Decoding failed (check valid Base64 string)",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the text you want to convert.",
          "Click the ‚ÄòEncode‚Äô button to convert the text into Base64 format.",
          "Click the ‚ÄòDecode‚Äô button to convert the Base64 string back to the original text.",
          "Use the copy button next to the result to copy it to your clipboard.",
          "Click the ‚ÄòReset‚Äô button to clear the input and results.",
        ],
      },
    },
    caseConverter: {
      title: "Case Converter",
      placeholder: "Enter text...",
      buttons: {
        upper: "Uppercase",
        lower: "Lowercase",
        snake: "Snake Case",
        camel: "Camel Case",
      },
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter your text in the input field.",
          "Click the 'Uppercase' button to convert all letters to uppercase.",
          "Click the 'Lowercase' button to convert all letters to lowercase.",
          "Click the 'Snake Case' button to convert words to lowercase separated by underscores.",
          "Click the 'Camel Case' button to convert text to camelCase format, with the first word lowercase and subsequent words capitalized.",
          "The result will appear in the output field, and you can click the copy icon to copy it to the clipboard.",
          "Click the 'Reset' button to clear both the input and output fields.",
        ],
      },
    },
    colorConverter: {
      title: "HEX -> RGB Converter",
      title2: "RGB -> HEX Converter",
      inputPlaceholder: "Enter color in FFFFFF format",
      inputHexPlaceholder: "Enter color in FFFFFF format",
      inputRgbPlaceholder: "Enter color in 255, 255, 255 format",
      convertButton: "Convert",
      convertHexToRgbButton: "HEX ‚Üí RGB Convert",
      convertRgbToHexButton: "RGB ‚Üí HEX Convert",
      invalidHex: "Invalid HEX color.",
      invalidRgb: "Invalid RGB format.",
      hexLabel: "HEX",
      rgbLabel: "RGB",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter a HEX color code in the input field (e.g., #FF5733 or F53).",
          "Click the 'HEX ‚Üí RGB' button to convert it to RGB format.",
          "The RGB result will appear in the output field, and you can copy it to the clipboard using the copy icon.",
          "Enter an RGB value in the input field (e.g., rgb(255, 87, 51) or 255,87,51).",
          "Click the 'RGB ‚Üí HEX' button to convert it to HEX format.",
          "The HEX result will appear in the output field, and you can copy it using the copy icon.",
          "Click the 'Reset' button to clear all inputs and results.",
        ],
      },
    },

    hashGenerator: {
      title: "SHA-256 Hash Generator",
      inputPlaceholder: "Enter text...",
      generateButton: "Generate Hash",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the text you want to generate a hash for.",
          "Click the 'Generate' button to create a SHA-256 hash.",
          "The result will be displayed below as a hexadecimal string.",
          "Click the copy button next to the result to copy the hash to the clipboard.",
          "Click the 'Reset' button to clear both input and output fields.",
        ],
      },
    },
    htmlEntities: {
      title: "HTML Entities Encode/Decode",
      inputPlaceholder: "Enter string to encode/decode",
      encodeButton: "Encode",
      decodeButton: "Decode",
      encodeResultLabel: "Encoded Result",
      decodeResultLabel: "Decoded Result",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the text you want to convert.",
          "Click the 'Encode' button to convert it to HTML entities.",
          "Click the 'Decode' button to convert HTML entities back to plain text.",
          "Use the copy button next to the result to copy it to the clipboard.",
          "Click the 'Reset' button to clear both input and output fields.",
        ],
      },
    },
    jsonFormatter: {
      title: "JSON Formatter",
      inputPlaceholder: '{"hello": "world"}',
      formatButton: "Format",
      invalidJson: "‚ö†Ô∏è Invalid JSON.",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter your JSON data.",
          "Click the 'Format' button to pretty-print the JSON with proper indentation.",
          "If the input is not valid JSON, an error message will be displayed.",
          "Click the 'Reset' button to clear both input and output.",
        ],
      },
    },
    randomPassword: {
      title: "Random Password Generator",
      lengthLabel: "Length:",
      generateButton: "Generate",
      lengthMin: 4,
      lengthMax: 50,
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the desired length of the password in the number input.",
          "Click the Generate button to create a random password below.",
          "Use the Copy button to copy the password to your clipboard.",
          "Click the Reset button to clear the input and result.",
        ],
      },
    },
    slugify: {
      title: "Slugify Converter",
      inputPlaceholder: "e.g. Hello World! Next.js App",
      convertButton: "Convert",
      resultLabel: "Result",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the text you want to convert in the input field.",
          "Click the Convert button to transform the text into a URL-friendly slug.",
          "Use the Copy button next to the result to copy the slug to your clipboard.",
          "Click the Reset button to clear the input and result.",
        ],
      },
    },
    textToAscii: {
      title: "Text ‚Üí ASCII Converter",
      inputPlaceholder: "e.g. Hello",
      convertButton: "Convert",
      resultLabel: "Result",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the text you want to convert in the input field.",
          "Click the Convert button to transform each character into its ASCII code.",
          "Use the Copy button next to the result to copy the ASCII codes to your clipboard.",
          "Click the Reset button to clear the input and result.",
        ],
      },
    },
    timestampConverter: {
      title: "Timestamp ‚Üí Date Converter",
      title2: "Date ‚Üí Timestamp Converter",
      timestampPlaceholder: "e.g. 1721456861",
      datePlaceholder: "e.g. 2025-07-20T12:00:00Z",
      toDateButton: "Timestamp ‚Üí Date",
      toTimestampButton: "Date ‚Üí Timestamp",
      dateLabel: "Date",
      timestampLabel: "Timestamp",
      invalidTimestamp: "Invalid timestamp",
      invalidDate: "Invalid date",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter a timestamp and click 'Convert to Date' to see it in ISO format.",
          "Enter a date and click 'Convert to Timestamp' to get the Unix timestamp.",
          "Use the Copy button next to the result to copy it to your clipboard.",
          "Click the Reset button to clear all input and results.",
        ],
      },
    },
    urlEncoderDecoder: {
      title: "URL Encoder/Decoder",
      inputPlaceholder: "Enter string to encode/decode",
      encodeButton: "Encode",
      decodeButton: "Decode",
      encodedLabel: "Encoded Result",
      decodedLabel: "Decoded Result",
      encodeError: "‚ö†Ô∏è Encoding failed",
      decodeError: "‚ö†Ô∏è Decoding failed",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter text in the input area.",
          "Click the 'Encode' button to convert it to URL-encoded format.",
          "Click the 'Decode' button to convert a URL-encoded string back to normal text.",
          "Use the Copy button next to the result to copy it to your clipboard.",
          "Click the Reset button to clear all input and results.",
        ],
      },
    },
    uuidGenerator: {
      title: "UUID Generator",
      generateButton: "Generate New UUID",
      tutorial: {
        title: "How to Use",
        steps: [
          "Select the UUID version you want to generate (v1, v3, v4, v5).",
          "Click the 'Generate' button to create a UUID.",
          "The generated UUID will appear in the result area.",
          "Use the Copy button next to the result to copy the UUID to your clipboard.",
          "Click the Reset button to clear the generated UUID.",
        ],
      },
    },
    wordCounter: {
      title: "Word & Character Counter",
      placeholder: "Enter text...",
      wordLabel: "Words",
      charLabel: "Characters",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter your text into the textarea.",
          "The number of words and characters will be displayed in real-time below.",
          "Click the copy button next to each number to copy the word or character count to the clipboard.",
          "Click the Reset button to clear the input and results.",
        ],
      },
    },
    actionButtons: {
      backButton: "Go Back",
      resetButton: "Reset",
    },
    qrCodeGenerator: {
      title: "QR Code Generator",
      inputPlaceholder: "Enter text or URL to generate QR code",
      generateButton: "Generate QR Code",
      downloadButton: "Download",
      actionButtons: { reset: "Reset" },
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the text you want to convert into a QR code in the input area.",
          "Click the Generate QR button to display the QR code below.",
          "Use the Copy button to copy the text or the Download button to save the QR code as an SVG file.",
          "Click the Reset button to clear the input and result.",
        ],
      },
    },
    regexTester: {
      title: "Regex Tester",
      patternPlaceholder: "Regex pattern (e.g., \\d+)",
      textPlaceholder: "Enter text to test against",
      testButton: "Test",
      invalidRegex: "Invalid regex pattern",
      noMatch: "No matches found",
      resultLabel: "Result",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the regex pattern in the pattern input field.",
          "Enter the text to test against in the text area.",
          "Click the Test button to see all matches below.",
          "Use the Copy button to copy the matches to your clipboard.",
          "Click the Reset button to clear the inputs and results.",
        ],
      },
    },
    loremIpsum: {
      title: "Lorem Ipsum Generator",
      paragraphsLabel: "Paragraphs",
      generateButton: "Generate",
      resultLabel: "Result",
      noResult: "Nothing generated yet",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the number of paragraphs you want to generate.",
          "Click the Generate button to create Lorem Ipsum text with the specified number of paragraphs.",
          "Check the generated text in the result area and use the Copy button to copy it.",
          "Click the Reset button to clear the input and the result.",
        ],
      },
    },
    wikiSummary: {
      title: "Wikipedia Summarizer",
      inputPlaceholder: "Enter a topic (e.g., JavaScript)",
      searchButton: "Search",
      resultLabel: "Summary",
      noResult: "No result yet",
      notFound: "No summary found",
      error: "An error occurred while fetching summary",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the Wikipedia topic you want to search for.",
          "Click the 'Search' button to fetch the summary for the topic.",
          "If a summary exists, it will be displayed in the result area.",
          "If not, a 'Not Found' message will be shown.",
          "Click the Reset button to clear the input and result.",
        ],
      },
    },
    timeDiff: {
      title: "Time Difference Calculator",
      calculateButton: "Calculate Difference",
      resultLabel: "Result",
      invalidDate: "Invalid date.",
      noResult: "No result yet.",
      day: "d",
      hour: "h",
      minute: "m",
      second: "s",
      actionButtons: { reset: "Reset" },
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the start date and time.",
          "Enter the end date and time.",
          "Click the Calculate button to see the difference in days, hours, minutes, and seconds.",
          "Use the Copy button next to the result to copy it to your clipboard.",
          "Click the Reset button to clear the input and result.",
        ],
      },
    },
    diffChecker: {
      title: "Diff Checker",
      inputPlaceholderA: "Enter first text",
      inputPlaceholderB: "Enter second text",
      compareButton: "Compare",
      resultLabel: "Result",
      noDifference: "No differences found",
      actionButtons: {
        backButton: "Back",
        resetButton: "Reset",
      },
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the text to compare in Text A and Text B fields.",
          "Click the 'Compare' button to see the differences between the two texts.",
          "Differences are indicated with '-' for Text A and '+' for Text B.",
          "Click the copy button next to the result to copy it to the clipboard.",
          "Click the 'Reset' button to clear both input and output fields.",
        ],
      },
    },
    markdownToHtml: {
      title: "Markdown to HTML Converter",
      inputPlaceholder: "Enter markdown text",
      convertButton: "Convert",
      resultLabel: "Result",
      noResult: "No result",
      actionButtons: {
        backButton: "Back",
        resetButton: "Reset",
      },
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter your Markdown text in the input area.",
          "Click the Convert button to render the Markdown as HTML.",
          "Check the rendered HTML in the result area and use the Copy button to copy it.",
          "Click the Reset button to clear the input and result.",
        ],
      },
    },
    jwtEncoderDecoder: {
      title: "JWT Decoder / Encoder",
      inputPlaceholder:
        'Enter JWT to decode or JSON to encode\n(For encoding: {"header": {...}, "payload": {...}})',
      decodeButton: "Decode",
      encodeButton: "Encode",
      invalidJwt: "Invalid JWT format.",
      invalidBase64: "Failed to decode Base64.",
      decodeError: "Error occurred during decoding.",
      encodeFormatError:
        "JSON must include both header and payload for encoding.",
      encodeError: "Error occurred during encoding.",
      outputLabel: "Result",
      noOutput: "No result.",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter a JWT string to decode its content.",
          "Decoded Header and Payload will be pretty-printed in JSON format.",
          "To encode, enter a JSON object with the structure { header: {...}, payload: {...} }.",
          "Click the Encode button to generate a base64url JWT string.",
          "Click the Reset button to clear input and output.",
        ],
      },
    },
    cssColorPalette: {
      title: "CSS Color Palette Generator",
      baseColorLabel: "Select Base Color",
      generateButton: "Generate Palette",
      clickToCopy: "Click to copy color code",
      actionButtons: {
        reset: "Reset",
      },
      tutorial: {
        title: "How to Use",
        steps: [
          "Select a base color using the color picker.",
          "Click the 'Generate Palette' button to create a color palette with adjusted brightness based on the selected color.",
          "The generated color palette will be displayed on the screen.",
          "Click any color block to copy its HEX code to the clipboard.",
          "Click the 'Reset' button to reset the base color and the palette.",
        ],
      },
    },
    csvJson: {
      title: "CSV ‚Üî JSON Converter",
      inputPlaceholder: "Enter CSV or JSON data",
      convertToJsonButton: "Convert to JSON",
      convertToCsvButton: "Convert to CSV",
      convertError: "An error occurred during conversion.",
      resultLabel: "Conversion Result",
      noResult: "No result",
      actionButtons: {
        reset: "Reset",
      },
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter CSV or JSON data into the input area.",
          "Click the 'Convert to JSON' button to convert CSV to JSON.",
          "Click the 'Convert to CSV' button to convert JSON to CSV.",
          "The converted result will be displayed in the output area.",
          "Click the copy button next to the result to copy it to the clipboard.",
          "Click the 'Reset' button to clear the input and output fields.",
        ],
      },
    },
    htmlTableGenerator: {
      title: "HTML Table Generator",
      rowsPlaceholder: "Enter number of rows (e.g. 3)",
      colsPlaceholder: "Enter number of columns (e.g. 4)",
      generateButton: "Generate Table",
      resetButton: "Reset",
      resultLabel: "Generated HTML Table Code",
      errorInvalidNumber: "Please enter a valid number (1 or more).",
      noResult: "No result",
      actionButtons: {
        reset: "Reset",
      },
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the number of rows and columns for the table.",
          "Click the 'Generate' button to create the HTML table code.",
          "Use the copy button next to the result to copy the generated HTML code to the clipboard.",
          "Click the 'Reset' button to clear both input and output fields.",
        ],
      },
    },
    httpStatus: {
      title: "HTTP Status Code Checker",
      inputPlaceholder: "e.g., 200, 404, 500...",
      checkButton: "Check",
      notFound: "Unknown status code.",
      noResult: "Enter a status code to see its description.",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter an HTTP status code (e.g., 200, 404).",
          "Click the 'Check' button to see the description of the status code.",
          "If no description is found, a 'Not Found' message will be displayed.",
          "Click the 'Reset' button to clear both input and output.",
        ],
      },
    },
    urlQueryParser: {
      title: "URL Query Parser/Builder",
      inputPlaceholder: "Enter URL or ?key=value&key2=value2 format",
      parseButton: "Parse Query",
      editParamsLabel: "Edit Parsed Parameters",
      buildButton: "Build Query String",
      buildResultLabel: "Built Query String",
      parseError: "Error occurred while parsing",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter a URL or query string in the input field.",
          "Click the 'Parse' button to display the query parameters as key-value pairs.",
          "You can edit the values of the parameters directly.",
          "Click the 'Build' button to generate a new query string from the edited parameters.",
          "Use the Copy button next to the result to copy the generated query string to your clipboard.",
          "Click the Reset button to clear all input and results.",
        ],
      },
    },
    uuidValidator: {
      title: "UUID Validator",
      inputPlaceholder:
        "Enter UUID (e.g. 123e4567-e89b-12d3-a456-426614174000)",
      validateButton: "Validate",
      validResult: "This is a valid UUID!",
      invalidResult: "Invalid UUID format.",
      versionLabel: "UUID Version",
      noResult: "No result to show.",
      tutorial: {
        title: "How to Use",
        steps: [
          "Enter the UUID you want to validate.",
          "Click the 'Validate' button to check if the UUID is valid.",
          "If valid, the result area will show 'Valid' and display the UUID version.",
          "If invalid, 'Invalid' will be displayed.",
          "Click the Reset button to clear the input and result.",
        ],
      },
    },
    escapeConverter: {
      title: "Escape Character Converter",
      inputPlaceholder: "Enter text here...",
      convertButton: "Convert",
      resultLabel: "Result",
      resetButton: "Reset",
      tutorial: {
        title: "How to use",
        steps: [
          "Enter the text you want to convert in the box above.",
          "Click the 'Convert' button to transform it into escape characters.",
          "Use the copy button next to the result to copy to clipboard.",
          "Click 'Reset' to clear both input and result.",
        ],
      },
    },
  },
  ja: {
    title: "üõ† DevTools Hub",
    description: "ÈñãÁô∫ËÄÖ„Éª„ÇØ„É™„Ç®„Ç§„Çø„ÉºÂêë„Åë„ÅÆÁ∞°Âçò„ÅßÈ´òÈÄü„Å™Â§âÊèõ/ÁîüÊàê„ÉÑ„Éº„É´ÈõÜ",
    searchPlaceholder: "„ÉÑ„Éº„É´„ÇíÊ§úÁ¥¢...",
    noResults: "Ê§úÁ¥¢ÁµêÊûú„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ",
    tools: [
      {
        href: "/ascii-to-text",
        label: "ASCII ‚Üí „ÉÜ„Ç≠„Çπ„ÉàÂ§âÊèõÊ©ü",
        desc: "ASCII„Ç≥„Éº„Éâ ‚Üí „ÉÜ„Ç≠„Çπ„ÉàÂ§âÊèõ",
        keywords: [
          "ascii",
          "„ÉÜ„Ç≠„Çπ„Éà",
          "ÊñáÂ≠ó",
          "Â§âÊèõ",
          "ascii to text",
          "„Ç¢„Çπ„Ç≠„Éº",
          "ÊñáÂ≠óÂàóÂ§âÊèõ",
        ],
      },
      {
        href: "/text-to-ascii",
        label: "„ÉÜ„Ç≠„Çπ„Éà ‚Üí ASCIIÂ§âÊèõÊ©ü",
        desc: "„ÉÜ„Ç≠„Çπ„Éà ‚Üí ASCII„Ç≥„Éº„ÉâÂ§âÊèõ",
        keywords: [
          "ascii",
          "text",
          "„Ç≥„Éº„Éâ",
          "Â§âÊèõ",
          "text to ascii",
          "ÊñáÂ≠ó„Ç≥„Éº„Éâ",
          "„ÉÜ„Ç≠„Çπ„ÉàÂ§âÊèõ",
        ],
      },
      {
        href: "/base64",
        label: "Base64 „Ç®„É≥„Ç≥„Éº„Éâ/„Éá„Ç≥„Éº„Éâ",
        desc: "„ÉÜ„Ç≠„Çπ„Éà„ÇíBase64„Å´Â§âÊèõ/Âæ©ÂÖÉ",
        keywords: [
          "base64",
          "„Ç®„É≥„Ç≥„Éº„Éâ",
          "„Éá„Ç≥„Éº„Éâ",
          "encode",
          "decode",
          "„Éô„Éº„Çπ64",
          "ÊñáÂ≠óÂàóÂ§âÊèõ",
        ],
      },
      {
        href: "/url-encode",
        label: "URL „Ç®„É≥„Ç≥„Éº„Éâ/„Éá„Ç≥„Éº„Éâ",
        desc: "URLÂÆâÂÖ®„Å™ÊñáÂ≠óÂàó„Å´Â§âÊèõ/Âæ©ÂÖÉ",
        keywords: [
          "url",
          "„Ç®„É≥„Ç≥„Éº„Éâ",
          "„Éá„Ç≥„Éº„Éâ",
          "encode",
          "decode",
          "„Éë„Éº„Çª„É≥„Éà„Ç®„É≥„Ç≥„Éº„Éâ",
          "Â§âÊèõ",
        ],
      },
      {
        href: "/uuid-generator",
        label: "UUID„Ç∏„Çß„Éç„É¨„Éº„Çø„Éº",
        desc: "„É©„É≥„ÉÄ„É†UUID (v1,v3,v4,v5)ÁîüÊàê",
        keywords: [
          "uuid",
          "ÁîüÊàê",
          "„É©„É≥„ÉÄ„É†",
          "v1",
          "v3",
          "v4",
          "v5",
          "„É¶„Éã„Éº„ÇØID",
          "„Ç∏„Çß„Éç„É¨„Éº„Çø",
        ],
      },
      {
        href: "/timestamp",
        label: "„Çø„Ç§„É†„Çπ„Çø„É≥„ÉóÂ§âÊèõÊ©ü",
        desc: "Unix„Çø„Ç§„É†„Çπ„Çø„É≥„Éó ‚Üî Êó•‰ªòÂ§âÊèõ",
        keywords: [
          "„Çø„Ç§„É†„Çπ„Çø„É≥„Éó",
          "Êó•ÊôÇ",
          "unix",
          "Â§âÊèõ",
          "timestamp",
          "Êó•‰ªò",
        ],
      },
      {
        href: "/slugify",
        label: "Slugify Â§âÊèõÊ©ü",
        desc: "ÊñáÂ≠óÂàó„ÇíURL„Çπ„É©„ÉÉ„Ç∞„Å´Â§âÊèõ",
        keywords: ["slug", "„Çπ„É©„ÉÉ„Ç∞", "url", "Â§âÊèõ", "slugify", "ÊñáÂ≠óÂàó"],
      },
      {
        href: "/word-counter",
        label: "ÂçòË™ûÔºÜÊñáÂ≠ó„Ç´„Ç¶„É≥„Çø„Éº",
        desc: "ÂçòË™ûÊï∞„ÉªÊñáÂ≠óÊï∞„ÅÆ„Ç´„Ç¶„É≥„Éà",
        keywords: [
          "ÂçòË™û",
          "ÊñáÂ≠ó",
          "„Ç´„Ç¶„É≥„Éà",
          "count",
          "ÊñáÂ≠óÊï∞",
          "„ÉØ„Éº„Éâ„Ç´„Ç¶„É≥„Éà",
        ],
      },
      {
        href: "/color-converter",
        label: "HEX ‚Üî RGB Â§âÊèõÊ©ü",
        desc: "„Ç´„É©„Éº„Ç≥„Éº„ÉâÂ§âÊèõ",
        keywords: ["hex", "rgb", "„Ç´„É©„Éº", "Ëâ≤", "„Ç≥„Éº„Éâ", "Â§âÊèõ"],
      },
      {
        href: "/case-converter",
        label: "Â§ßÊñáÂ≠ó„ÉªÂ∞èÊñáÂ≠óÂ§âÊèõÊ©ü",
        desc: "Uppercase„ÄÅsnake_case„ÄÅcamelCase„Å™„Å©",
        keywords: [
          "Â§ßÊñáÂ≠ó",
          "Â∞èÊñáÂ≠ó",
          "Â§âÊèõ",
          "uppercase",
          "lowercase",
          "camel",
          "snake",
          "„Ç±„Éº„ÇπÂ§âÊèõ",
        ],
      },
      {
        href: "/hash-generator",
        label: "SHA-256 „Éè„ÉÉ„Ç∑„É•ÁîüÊàêÊ©ü",
        desc: "ÊñáÂ≠óÂàó„ÅÆ„Éè„ÉÉ„Ç∑„É•ÂÄ§ÁîüÊàê",
        keywords: ["sha256", "„Éè„ÉÉ„Ç∑„É•", "ÁîüÊàê", "hash", "ÊñáÂ≠óÂàó", "ÊöóÂè∑Âåñ"],
      },
      {
        href: "/base-converter",
        label: "ÈÄ≤Êï∞Â§âÊèõÊ©ü",
        desc: "10ÈÄ≤Êï∞„ÄÅ2ÈÄ≤Êï∞„ÄÅ16ÈÄ≤Êï∞„ÅÆÂ§âÊèõ",
        keywords: ["ÈÄ≤Êï∞", "Â§âÊèõ", "decimal", "binary", "hex", "Êï∞ÂÄ§Â§âÊèõ"],
      },
      {
        href: "/random-password",
        label: "„Éë„Çπ„ÉØ„Éº„ÉâÁîüÊàêÊ©ü",
        desc: "„É©„É≥„ÉÄ„É†„Éë„Çπ„ÉØ„Éº„ÉâÁîüÊàê",
        keywords: [
          "„Éë„Çπ„ÉØ„Éº„Éâ",
          "password",
          "ÁîüÊàê",
          "„É©„É≥„ÉÄ„É†",
          "„Çª„Ç≠„É•„É™„ÉÜ„Ç£",
        ],
      },
      {
        href: "/html-entities",
        label: "HTML„Ç®„É≥„ÉÜ„Ç£„ÉÜ„Ç£Â§âÊèõÊ©ü",
        desc: "HTMLÁâπÊÆäÊñáÂ≠ó„ÅÆ„Ç®„É≥„Ç≥„Éº„Éâ/„Éá„Ç≥„Éº„Éâ",
        keywords: [
          "html",
          "„Ç®„É≥„ÉÜ„Ç£„ÉÜ„Ç£",
          "ÁâπÊÆäÊñáÂ≠ó",
          "Â§âÊèõ",
          "„Ç®„É≥„Ç≥„Éº„Éâ",
          "„Éá„Ç≥„Éº„Éâ",
        ],
      },
      {
        href: "/json-formatter",
        label: "JSON„Éï„Ç©„Éº„Éû„ÉÉ„Çø„Éº",
        desc: "JSON„Éá„Éº„Çø„ÅÆ„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Åä„Çà„Å≥Êï¥Âàó",
        keywords: [
          "json",
          "„Éï„Ç©„Éº„Éû„ÉÉ„Éà",
          "Êï¥ÂΩ¢",
          "format",
          "„Éá„Éº„Çø",
          "„Ç∏„Çß„Ç§„ÇΩ„É≥",
        ],
      },
      {
        href: "/qr-code",
        label: "QR„Ç≥„Éº„Éâ„Ç∏„Çß„Éç„É¨„Éº„Çø„Éº",
        desc: "„ÉÜ„Ç≠„Çπ„Éà„ÇíQR„Ç≥„Éº„Éâ„Å´Â§âÊèõ„Åó„Å¶‰øùÂ≠ò„Åß",
        keywords: ["qr", "„Ç≥„Éº„Éâ", "ÁîüÊàê", "„ÉÜ„Ç≠„Çπ„Éà", "qr code", "‰ΩúÊàê"],
      },
      {
        href: "/regex-tester",
        label: "Ê≠£Ë¶èË°®Áèæ„ÉÜ„Çπ„Çø„Éº",
        desc: "Ê≠£Ë¶èË°®Áèæ„Çí„É™„Ç¢„É´„Çø„Ç§„É†„Åß„ÉÜ„Çπ„Éà",
        keywords: ["Ê≠£Ë¶èË°®Áèæ", "regex", "„ÉÜ„Çπ„Éà", "„Éë„Çø„Éº„É≥", "Á¢∫Ë™ç"],
      },
      {
        href: "/lorem-ipsum",
        label: "„É≠„É¨„É†„Ç§„Éó„Çµ„É†„Ç∏„Çß„Éç„É¨„Éº„Çø„Éº",
        desc: "„ÉÄ„Éü„Éº„ÉÜ„Ç≠„Çπ„Éà„ÇíÁîüÊàê",
        keywords: ["lorem", "ipsum", "„ÉÄ„Éü„Éº", "„ÉÜ„Ç≠„Çπ„Éà", "ÁîüÊàê", "„Çµ„É≥„Éó„É´"],
      },
      {
        href: "/wiki-summary",
        label: "Wikipedia „Çµ„Éû„É™„Éº",
        desc: "Wikipedia„ÅÆË®ò‰∫ã„ÇíÁ∞°Âçò„Å´Ë¶ÅÁ¥Ñ",
        keywords: ["wikipedia", "„Çµ„Éû„É™„Éº", "Ë¶ÅÁ¥Ñ", "wiki", "Ë®ò‰∫ã", "„Åæ„Å®„ÇÅ"],
      },
      {
        href: "/time-diff",
        label: "ÊôÇÈñìÂ∑ÆË®àÁÆó„ÉÑ„Éº„É´",
        desc: "2„Å§„ÅÆÊó•‰ªò/„Çø„Ç§„É†„Çπ„Çø„É≥„Éó„ÅÆÂ∑Æ„ÇíË®àÁÆó",
        keywords: ["ÊôÇÈñì", "Â∑Æ", "Ë®àÁÆó", "Êó•ÊôÇ", "timestamp", "Â∑ÆÂàÜ"],
      },
      {
        href: "/diff-checker",
        label: "„ÉÜ„Ç≠„Çπ„ÉàÂ∑ÆÂàÜ„ÉÅ„Çß„ÉÉ„Ç´„Éº",
        desc: "2„Å§„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÅÆÈÅï„ÅÑ„ÇíÊØîËºÉ",
        keywords: ["diff", "Â∑ÆÂàÜ", "ÊØîËºÉ", "„ÉÜ„Ç≠„Çπ„Éà", "ÈÅï„ÅÑ", "„ÉÅ„Çß„ÉÉ„Ç´„Éº"],
      },
      {
        href: "/markdown-html",
        label: "Markdown ‚Üî HTML„Ç≥„É≥„Éê„Éº„Çø„Éº",
        desc: "Markdown„Å®HTML„ÇíÁõ∏‰∫íÂ§âÊèõ",
        keywords: ["markdown", "html", "Â§âÊèõ", "„Éû„Éº„ÇØ„ÉÄ„Ç¶„É≥", "„Ç≥„É≥„Éê„Éº„Çø„Éº"],
      },
      {
        href: "/jwt-encoder-decoder",
        label: "JWT „Éá„Ç≥„Éº„ÉÄ„Éº/„Ç®„É≥„Ç≥„Éº„ÉÄ„Éº",
        desc: "JWT„Éà„Éº„ÇØ„É≥„Çí„Éá„Ç≥„Éº„Éâ„Åó„ÄÅJSON„ÇíJWTÂΩ¢Âºè„Å´„Ç®„É≥„Ç≥„Éº„Éâ„Åó„Åæ„ÅôÔºàÁΩ≤Âêç„ÅØÂê´„Åø„Åæ„Åõ„ÇìÔºâ",
        keywords: ["jwt", "„Ç®„É≥„Ç≥„Éº„Éâ", "„Éá„Ç≥„Éº„Éâ", "„Éà„Éº„ÇØ„É≥", "Â§âÊèõ", "json"],
      },
      {
        href: "/css-color-palette",
        label: "CSS„Ç´„É©„Éº„Éë„É¨„ÉÉ„Éà„Ç∏„Çß„Éç„É¨„Éº„Çø„Éº",
        desc: "Âü∫Êú¨Ëâ≤„Åã„ÇâCSSÁî®„ÅÆ„Ç´„É©„Éº„Éë„É¨„ÉÉ„Éà„ÇíÁîüÊàê„Åó„Åæ„Åô",
        keywords: ["css", "„Ç´„É©„Éº", "„Éë„É¨„ÉÉ„Éà", "ÁîüÊàê", "Ëâ≤", "„Ç´„É©„Éº„Éë„É¨„ÉÉ„Éà"],
      },
      {
        href: "/csv-json",
        label: "CSV ‚Üî JSON„Ç≥„É≥„Éê„Éº„Çø„Éº",
        desc: "CSV„Å®JSON„Éï„Ç©„Éº„Éû„ÉÉ„Éà„ÇíÁõ∏‰∫íÂ§âÊèõ„Åó„Åæ„Åô",
        keywords: ["csv", "json", "Â§âÊèõ", "„Éï„Ç©„Éº„Éû„ÉÉ„Éà", "„Ç≥„É≥„Éê„Éº„Çø„Éº"],
      },
      {
        href: "/html-table-generator",
        label: "HTML„ÉÜ„Éº„Éñ„É´„Ç∏„Çß„Éç„É¨„Éº„Çø„Éº",
        desc: "ÂÖ•Âäõ„Éá„Éº„Çø„Åã„ÇâHTML„ÉÜ„Éº„Éñ„É´„Çí‰ΩúÊàê„Åó„Åæ„Åô",
        keywords: ["html", "„ÉÜ„Éº„Éñ„É´", "ÁîüÊàê", "table", "‰ΩúÊàê"],
      },
      {
        href: "/http-status",
        label: "HTTP„Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„ÉâËß£Ë™¨",
        desc: "HTTP„Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ„ÅÆË™¨Êòé„ÇíÊèê‰æõ„Åó„Åæ„Åô",
        keywords: ["http", "„Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ", "„Ç≥„Éº„Éâ", "Ëß£Ë™¨", "Ë™¨Êòé"],
      },
      {
        href: "/url-query-parser",
        label: "URL„ÇØ„Ç®„É™„Éë„É©„É°„Éº„Çø„Éë„Éº„Çµ„Éº/„Éì„É´„ÉÄ„Éº",
        desc: "URL„ÇØ„Ç®„É™ÊñáÂ≠óÂàó„ÇíËß£Êûê„Åä„Çà„Å≥ÁîüÊàê„Åó„Åæ„Åô",
        keywords: ["url", "„ÇØ„Ç®„É™", "„Éë„É©„É°„Éº„Çø", "Ëß£Êûê", "ÁîüÊàê", "„Éì„É´„ÉÄ„Éº"],
      },
      {
        href: "/uuid-validator",
        label: "UUID„Éê„É™„Éá„Éº„Çø„Éº",
        desc: "ÊñáÂ≠óÂàó„ÅåÊ≠£„Åó„ÅÑUUID„ÅãÊ§úË®º„Åó„Åæ„Åô",
        keywords: ["uuid", "Ê§úË®º", "„Éê„É™„Éá„Éº„Éà", "Á¢∫Ë™ç", "validator"],
      },
      {
        href: "/escape-converter",
        label: "„Ç®„Çπ„Ç±„Éº„ÉóÊñáÂ≠óÂ§âÊèõÂô®",
        desc: "„Ç®„Çπ„Ç±„Éº„ÉóÊñáÂ≠óÂ§âÊèõÂô®",
        keywords: ["„Ç®„Çπ„Ç±„Éº„Éó", "ÊñáÂ≠ó", "Â§âÊèõ", "ÊñáÂ≠óÂàó", "„Ç≥„É≥„Éê„Éº„Çø„Éº"],
      },
    ],
    allToolsTitle: "ÂÖ®„Å¶„ÅÆ„ÉÑ„Éº„É´",
    tutorialTitle: "‰Ωø„ÅÑÊñπ",
    tutorialSteps: [
      "‰Ωø„ÅÑ„Åü„ÅÑ„ÉÑ„Éº„É´„ÇíÊ§úÁ¥¢„Åæ„Åü„ÅØÈÅ∏Êäû„Åó„Åæ„Åô„ÄÇ",
      "ÂÖ•Âäõ„Éá„Éº„Çø„ÇíÂÖ•„Çå„Åæ„Åô„ÄÇ",
      "Â§âÊèõ/Ê§úË®º„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Åæ„Åô„ÄÇ",
      "ÁµêÊûú„Çí„Ç≥„Éî„Éº„Åó„Å¶Âà©Áî®„Åó„Åæ„Åô„ÄÇ",
      "üåê Ë®ÄË™û„É°„Éã„É•„Éº„Åã„Çâ„Çµ„Ç§„Éà„ÅÆË®ÄË™û„ÇíÂ§âÊõ¥„Åß„Åç„Åæ„Åô„ÄÇ",
      "FAQ„Çª„ÇØ„Ç∑„Éß„É≥„Åß„Çà„Åè„ÅÇ„ÇãË≥™Âïè„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
    ],
    faqTitle: "„Çà„Åè„ÅÇ„ÇãË≥™Âïè",
    faq: [
      { q: "„Åì„ÅÆ„Çµ„Ç§„Éà„ÅØÁÑ°Êñô„Åß‰Ωø„Åà„Åæ„Åô„ÅãÔºü", a: "„ÅØ„ÅÑ„ÄÅÂÆåÂÖ®„Å´ÁÑ°Êñô„Åß„Åô„ÄÇ" },
      {
        q: "„Çπ„Éû„Éõ„Åß„ÇÇÂà©Áî®„Åß„Åç„Åæ„Åô„ÅãÔºü",
        a: "„ÅØ„ÅÑ„ÄÅ„Åì„ÅÆ„Çµ„Ç§„Éà„ÅØ„É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøú„Å™„ÅÆ„Åß„ÄÅ„Çπ„Éû„Éõ„Åß„ÇÇÂø´ÈÅ©„Å´‰Ωø„Åà„Åæ„Åô„ÄÇ",
      },
      {
        q: "„ÉÑ„Éº„É´„Çí‰Ωø„ÅÜ„ÅÆ„Å´‰ºöÂì°ÁôªÈå≤„ÅØÂøÖË¶Å„Åß„Åô„ÅãÔºü",
        a: "„ÅÑ„ÅÑ„Åà„ÄÅ„Ç¢„Ç´„Ç¶„É≥„ÉàÁôªÈå≤„Å™„Åó„ÅßÂÖ®„Å¶„ÅÆ„ÉÑ„Éº„É´„ÇíÂà©Áî®„Åß„Åç„Åæ„Åô„ÄÇ",
      },
      {
        q: "ÂÖ•Âäõ„Åó„Åü„Éá„Éº„Çø„ÅØ‰øùÂ≠ò„Åï„Çå„Åæ„Åô„ÅãÔºü",
        a: "„ÅÑ„ÅÑ„Åà„ÄÅ„Åô„Åπ„Å¶„Éñ„É©„Ç¶„Ç∂ÂÜÖ„ÅßÂá¶ÁêÜ„Åï„Çå„ÄÅ„Éá„Éº„Çø„ÅØ‰øùÂ≠ò„Åï„Çå„Åæ„Åõ„Çì„ÄÇ",
      },
      {
        q: "ÁµêÊûú„Çí‰ªñ„ÅÆ‰∫∫„Å®ÂÖ±Êúâ„Åß„Åç„Åæ„Åô„ÅãÔºü",
        a: "„ÅØ„ÅÑ„ÄÅÁµêÊûú„Çí„Ç≥„Éî„Éº„Åó„Å¶Ëá™Áî±„Å´ÂÖ±Êúâ„Åß„Åç„Åæ„Åô„ÄÇ",
      },
      {
        q: "‰ªäÂæå„Åï„Çâ„Å´„ÉÑ„Éº„É´„ÅåËøΩÂä†„Åï„Çå„Åæ„Åô„ÅãÔºü",
        a: "„ÅØ„ÅÑ„ÄÅ‰ªäÂæå„ÇÇÊñ∞„Åó„ÅÑ„É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£„ÇÑÊ©üËÉΩ„ÇíËøΩÂä†„Åó„Å¶„ÅÑ„Åè‰∫àÂÆö„Åß„Åô„ÄÇ",
      },
    ],
    asciiToText: {
      title: "ASCII ‚Üí „ÉÜ„Ç≠„Çπ„ÉàÂ§âÊèõÊ©ü",
      placeholder: "‰æã: 72 101 108 108 111",
      button: "Â§âÊèõ",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "Â§âÊèõ„Åó„Åü„ÅÑASCII„Ç≥„Éº„ÉâÔºàÊï∞Â≠óÔºâ„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇÔºà‰æã: 72 101 108 108 111Ôºâ",
          "Êï∞Â≠ó„ÅØ„Çπ„Éö„Éº„Çπ„ÄÅ„Ç´„É≥„Éû„ÄÅ„Çª„Éü„Ç≥„É≠„É≥„Å™„Å©„ÅßÂå∫Âàá„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ",
          "„ÄåÂ§âÊèõ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅASCII„Ç≥„Éº„Éâ„Åå„ÉÜ„Ç≠„Çπ„Éà„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„Å´„ÅÇ„Çã„Ç≥„Éî„Éº „Éú„Çø„É≥„Åß„ÉÜ„Ç≠„Çπ„Éà„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    baseConverter: {
      title: "ÈÄ≤Êï∞Â§âÊèõÊ©ü",
      inputBaseLabel: "ÂÖ•ÂäõÈÄ≤Êï∞„ÇíÈÅ∏Êäû",
      inputPlaceholder: "ÂÄ§„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      convertButton: "Â§âÊèõ",
      errorInvalidInput: "ÂÖ•ÂäõÂÄ§„ÅåÈÅ∏Êäû„Åó„ÅüÈÄ≤Êï∞„Å´Âêà„ÅÑ„Åæ„Åõ„Çì„ÄÇ",
      resultLabels: {
        binary: "2ÈÄ≤Êï∞",
        octal: "8ÈÄ≤Êï∞",
        decimal: "10ÈÄ≤Êï∞",
        hex: "16ÈÄ≤Êï∞",
        base32: "32ÈÄ≤Êï∞",
      },
      options: {
        "2": "2ÈÄ≤Êï∞",
        "8": "8ÈÄ≤Êï∞",
        "10": "10ÈÄ≤Êï∞",
        "16": "16ÈÄ≤Êï∞",
        "32": "32ÈÄ≤Êï∞",
      },
      invalidValue: "‚ùå ÁÑ°Âäπ„Å™ÂÖ•Âäõ",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "ÂÖ•ÂäõÂü∫Êï∞Ôºà2„ÄÅ8„ÄÅ10„ÄÅ16„ÄÅ32„ÅÆ„ÅÑ„Åö„Çå„ÅãÔºâ„ÇíÈÅ∏Êäû„Åó„Åæ„Åô„ÄÇ",
          "ÈÅ∏Êäû„Åó„ÅüÂü∫Êï∞„Å´Âêà„Å£„ÅüÊï∞ÂÄ§„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„ÄåÂ§âÊèõ„Åô„Çã„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ2ÈÄ≤Êï∞„ÄÅ8ÈÄ≤Êï∞„ÄÅ10ÈÄ≤Êï∞„ÄÅ16ÈÄ≤Êï∞„ÄÅ32ÈÄ≤Êï∞„ÅÆÁµêÊûú„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÂêÑÁµêÊûú„ÅÆÊ®™„Å´„ÅÇ„Çã„Ç≥„Éî„Éº „Éú„Çø„É≥„Åß„ÄÅ„Åù„ÅÆÂÄ§„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„Åô„Åπ„Å¶„ÅÆÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },

    base64EncoderDecoder: {
      title: "Base64 „Ç®„É≥„Ç≥„Éº„Éâ/„Éá„Ç≥„Éº„Éâ",
      inputPlaceholder: "„Ç®„É≥„Ç≥„Éº„Éâ/„Éá„Ç≥„Éº„Éâ„Åô„ÇãÊñáÂ≠óÂàó„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      encodeButton: "„Ç®„É≥„Ç≥„Éº„Éâ",
      decodeButton: "„Éá„Ç≥„Éº„Éâ",
      encodeResultLabel: "„Ç®„É≥„Ç≥„Éº„ÉâÁµêÊûú",
      decodeResultLabel: "„Éá„Ç≥„Éº„ÉâÁµêÊûú",
      encodeError: "‚ö†Ô∏è „Ç®„É≥„Ç≥„Éº„ÉâÂ§±ÊïóÔºàÊúâÂäπ„Å™ÊñáÂ≠óÂàó„ÅãÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºâ",
      decodeError: "‚ö†Ô∏è „Éá„Ç≥„Éº„ÉâÂ§±ÊïóÔºàÊúâÂäπ„Å™Base64ÊñáÂ≠óÂàó„ÅãÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºâ",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "Â§âÊèõ„Åó„Åü„ÅÑ„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„Äå„Ç®„É≥„Ç≥„Éº„Éâ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„ÉÜ„Ç≠„Çπ„Éà„ÅåBase64ÂΩ¢Âºè„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Äå„Éá„Ç≥„Éº„Éâ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅBase64ÊñáÂ≠óÂàó„ÅåÂÖÉ„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„Å´„ÅÇ„Çã„Ç≥„Éî„Éº „Éú„Çø„É≥„ÅßÁµêÊûú„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    caseConverter: {
      title: "„Ç±„Éº„ÇπÂ§âÊèõÊ©ü",
      placeholder: "„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ...",
      buttons: {
        upper: "Â§ßÊñáÂ≠ó",
        lower: "Â∞èÊñáÂ≠ó",
        snake: "„Çπ„Éç„Éº„ÇØ„Ç±„Éº„Çπ",
        camel: "„Ç≠„É£„É°„É´„Ç±„Éº„Çπ",
      },
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•ÂäõÊ¨Ñ„Å´ÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„ÄåÂ§ßÊñáÂ≠ó„Äç„Éú„Çø„É≥„ÇíÊäº„Åô„Å®„ÄÅ„Åô„Åπ„Å¶Â§ßÊñáÂ≠ó„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "„ÄåÂ∞èÊñáÂ≠ó„Äç„Éú„Çø„É≥„ÇíÊäº„Åô„Å®„ÄÅ„Åô„Åπ„Å¶Â∞èÊñáÂ≠ó„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Äå„Çπ„Éç„Éº„ÇØ„Ç±„Éº„Çπ„Äç„Éú„Çø„É≥„ÇíÊäº„Åô„Å®„ÄÅÂçòË™û„Åå„Ç¢„É≥„ÉÄ„Éº„Çπ„Ç≥„Ç¢„ÅßÂå∫Âàá„Çâ„Çå„ÅüÂ∞èÊñáÂ≠óÂΩ¢Âºè„Å´„Å™„Çä„Åæ„Åô„ÄÇ",
          "„Äå„Ç≠„É£„É°„É´„Ç±„Éº„Çπ„Äç„Éú„Çø„É≥„ÇíÊäº„Åô„Å®„ÄÅÂÖàÈ†≠ÂçòË™û„ÅØÂ∞èÊñáÂ≠ó„ÄÅ„Åù„Çå‰ª•Èôç„ÅÆÂçòË™û„ÅØÂÖàÈ†≠„ÅåÂ§ßÊñáÂ≠ó„Å´„Å™„ÇãÂΩ¢Âºè„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅØÂá∫ÂäõÊ¨Ñ„Å´Ë°®Á§∫„Åï„Çå„ÄÅ„Ç≥„Éî„Éº„Ç¢„Ç§„Ç≥„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„ÅßÂÖ•Âäõ„Å®ÁµêÊûú„ÇíÂàùÊúüÂåñ„Åß„Åç„Åæ„Åô„ÄÇ",
        ],
      },
    },
    colorConverter: {
      title: "HEX ‚Üí RGB„Ç≥„É≥„Éê„Éº„Çø„Éº",
      title2: "RGB ‚Üí HEX„Ç≥„É≥„Éê„Éº„Çø„Éº",
      inputPlaceholder: "FFFFFF ÂΩ¢Âºè„ÅßÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      inputHexPlaceholder: "FFFFFF ÂΩ¢Âºè„ÅßÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      inputRgbPlaceholder: "255, 255, 255 ÂΩ¢Âºè„ÅßÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      convertButton: "Â§âÊèõ",
      convertHexToRgbButton: "HEX ‚Üí RGB Â§âÊèõ",
      convertRgbToHexButton: "RGB ‚Üí HEX Â§âÊèõ",
      invalidHex: "ÁÑ°Âäπ„Å™HEX„Ç´„É©„Éº„Åß„Åô„ÄÇ",
      invalidRgb: "ÁÑ°Âäπ„Å™RGBÂΩ¢Âºè„Åß„Åô„ÄÇ",
      hexLabel: "HEX",
      rgbLabel: "RGB",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "HEX„Ç´„É©„Éº„Ç≥„Éº„Éâ„ÇíÂÖ•ÂäõÊ¨Ñ„Å´ÂÖ•Âäõ„Åó„Åæ„ÅôÔºà‰æã: #FF5733 „Åæ„Åü„ÅØ F53Ôºâ„ÄÇ",
          "„ÄåHEX ‚Üí RGB„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅRGBÂΩ¢Âºè„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "RGB„ÅÆÁµêÊûú„ÅØÂá∫ÂäõÊ¨Ñ„Å´Ë°®Á§∫„Åï„Çå„ÄÅ„Ç≥„Éî„Éº„Ç¢„Ç§„Ç≥„É≥„Åß„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "RGBÂÄ§„ÇíÂÖ•ÂäõÊ¨Ñ„Å´ÂÖ•Âäõ„Åó„Åæ„ÅôÔºà‰æã: rgb(255, 87, 51) „Åæ„Åü„ÅØ 255,87,51Ôºâ„ÄÇ",
          "„ÄåRGB ‚Üí HEX„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅHEXÂΩ¢Âºè„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "HEX„ÅÆÁµêÊûú„ÅØÂá∫ÂäõÊ¨Ñ„Å´Ë°®Á§∫„Åï„Çå„ÄÅ„Ç≥„Éî„Éº„Ç¢„Ç§„Ç≥„É≥„Åß„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„Åô„Åπ„Å¶„ÅÆÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },

    hashGenerator: {
      title: "SHA-256 „Éè„ÉÉ„Ç∑„É•ÁîüÊàêÂô®",
      inputPlaceholder: "„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ...",
      generateButton: "„Éè„ÉÉ„Ç∑„É•ÁîüÊàê",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "„Éè„ÉÉ„Ç∑„É•„ÇíÁîüÊàê„Åó„Åü„ÅÑ„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„ÄåÁîüÊàê„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅSHA-256„Éè„ÉÉ„Ç∑„É•„Åå‰ΩúÊàê„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅØ‰∏ã„ÅÆ„Éú„ÉÉ„ÇØ„Çπ„Å´16ÈÄ≤Êï∞„ÅÆÊñáÂ≠óÂàó„Å®„Åó„Å¶Ë°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„Å´„ÅÇ„Çã„Ç≥„Éî„Éº „Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„Éè„ÉÉ„Ç∑„É•„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    htmlEntities: {
      title: "HTML„Ç®„É≥„ÉÜ„Ç£„ÉÜ„Ç£ „Ç®„É≥„Ç≥„Éº„Éâ/„Éá„Ç≥„Éº„Éâ",
      inputPlaceholder: "„Ç®„É≥„Ç≥„Éº„Éâ/„Éá„Ç≥„Éº„Éâ„Åô„ÇãÊñáÂ≠óÂàó„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      encodeButton: "„Ç®„É≥„Ç≥„Éº„Éâ",
      decodeButton: "„Éá„Ç≥„Éº„Éâ",
      encodeResultLabel: "„Ç®„É≥„Ç≥„Éº„ÉâÁµêÊûú",
      decodeResultLabel: "„Éá„Ç≥„Éº„ÉâÁµêÊûú",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "Â§âÊèõ„Åó„Åü„ÅÑ„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„Äå„Ç®„É≥„Ç≥„Éº„Éâ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅHTML„Ç®„É≥„ÉÜ„Ç£„ÉÜ„Ç£„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Äå„Éá„Ç≥„Éº„Éâ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅHTML„Ç®„É≥„ÉÜ„Ç£„ÉÜ„Ç£„ÅåÈÄöÂ∏∏„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„Å´Êàª„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„Å´„ÅÇ„Çã„Ç≥„Éî„Éº „Éú„Çø„É≥„ÅßÂ§âÊèõ„Åï„Çå„Åü„ÉÜ„Ç≠„Çπ„Éà„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    jsonFormatter: {
      title: "JSON„Éï„Ç©„Éº„Éû„ÉÉ„Çø„Éº",
      inputPlaceholder: '{"hello": "world"}',
      formatButton: "„Éï„Ç©„Éº„Éû„ÉÉ„Éà",
      invalidJson: "‚ö†Ô∏è ÊúâÂäπ„Å™JSON„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "JSON„Éá„Éº„Çø„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„Äå„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅJSON„ÅåË¶ã„ÇÑ„Åô„Åè„Ç§„É≥„Éá„É≥„Éà„Åï„Çå„Å¶Ë°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÂÖ•Âäõ„ÅåÊúâÂäπ„Å™JSON„Åß„Å™„ÅÑÂ†¥Âêà„ÅØ„ÄÅ„Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®Âá∫Âäõ„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    randomPassword: {
      title: "„É©„É≥„ÉÄ„É†„Éë„Çπ„ÉØ„Éº„ÉâÁîüÊàêÂô®",
      lengthLabel: "Èï∑„Åï:",
      generateButton: "ÁîüÊàê",
      lengthMin: 4,
      lengthMax: 50,
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "Êï∞Â≠óÂÖ•ÂäõÊ¨Ñ„Å´ÁîüÊàê„Åô„Çã„Éë„Çπ„ÉØ„Éº„Éâ„ÅÆÈï∑„Åï„ÇíÊåáÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "ÁîüÊàê„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ‰∏ã„Å´„É©„É≥„ÉÄ„É†„Å™„Éë„Çπ„ÉØ„Éº„Éâ„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Ç≥„Éî„Éº „Éú„Çø„É≥„Åß„Éë„Çπ„ÉØ„Éº„Éâ„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    slugify: {
      title: "Slugify Â§âÊèõÊ©ü",
      inputPlaceholder: "‰æã: Hello World! Next.js App",
      convertButton: "Â§âÊèõ",
      resultLabel: "ÁµêÊûú",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "Â§âÊèõ„Åó„Åü„ÅÑÊñáÁ´†„ÇíÂÖ•ÂäõÊ¨Ñ„Å´ÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "Â§âÊèõ„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÊñáÁ´†„ÅåURLÂêë„Åë„ÅÆ„Çπ„É©„ÉÉ„Ç∞„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„ÅÆ„Ç≥„Éî„Éº „Éú„Çø„É≥„Åß„Çπ„É©„ÉÉ„Ç∞„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    textToAscii: {
      title: "„ÉÜ„Ç≠„Çπ„Éà ‚Üí ASCII Â§âÊèõÊ©ü",
      inputPlaceholder: "‰æã: Hello",
      convertButton: "Â§âÊèõ",
      resultLabel: "ÁµêÊûú",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "Â§âÊèõ„Åó„Åü„ÅÑ„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•ÂäõÊ¨Ñ„Å´ÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "Â§âÊèõ„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂêÑÊñáÂ≠ó„ÅåASCII„Ç≥„Éº„Éâ„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„ÅÆ„Ç≥„Éî„Éº „Éú„Çø„É≥„ÅßASCII„Ç≥„Éº„Éâ„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    timestampConverter: {
      title: "„Çø„Ç§„É†„Çπ„Çø„É≥„Éó ‚Üí Êó•‰ªò Â§âÊèõÊ©ü",
      title2: "Êó•‰ªò ‚Üí „Çø„Ç§„É†„Çπ„Çø„É≥„Éó Â§âÊèõÊ©ü",
      timestampPlaceholder: "‰æã: 1721456861",
      datePlaceholder: "‰æã: 2025-07-20T12:00:00Z",
      toDateButton: "„Çø„Ç§„É†„Çπ„Çø„É≥„Éó ‚Üí Êó•‰ªò",
      toTimestampButton: "Êó•‰ªò ‚Üí „Çø„Ç§„É†„Çπ„Çø„É≥„Éó",
      dateLabel: "Êó•‰ªò",
      timestampLabel: "„Çø„Ç§„É†„Çπ„Çø„É≥„Éó",
      invalidTimestamp: "ÁÑ°Âäπ„Å™„Çø„Ç§„É†„Çπ„Çø„É≥„Éó",
      invalidDate: "ÁÑ°Âäπ„Å™Êó•‰ªò",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "„Çø„Ç§„É†„Çπ„Çø„É≥„Éó„ÇíÂÖ•Âäõ„Åó„Å¶„ÄåDate„Å´Â§âÊèõ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅISOÂΩ¢Âºè„ÅßË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "Êó•‰ªò„ÇíÂÖ•Âäõ„Åó„Å¶„ÄåTimestamp„Å´Â§âÊèõ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅUnix„Çø„Ç§„É†„Çπ„Çø„É≥„Éó„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„ÅÆ„Ç≥„Éî„Éº „Éú„Çø„É≥„ÅßÂ§âÊèõÁµêÊûú„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    urlEncoderDecoder: {
      title: "URL „Ç®„É≥„Ç≥„Éº„Éâ/„Éá„Ç≥„Éº„Éâ",
      inputPlaceholder: "„Ç®„É≥„Ç≥„Éº„Éâ/„Éá„Ç≥„Éº„Éâ„Åô„ÇãÊñáÂ≠óÂàó„ÇíÂÖ•Âäõ",
      encodeButton: "„Ç®„É≥„Ç≥„Éº„Éâ",
      decodeButton: "„Éá„Ç≥„Éº„Éâ",
      encodedLabel: "„Ç®„É≥„Ç≥„Éº„ÉâÁµêÊûú",
      decodedLabel: "„Éá„Ç≥„Éº„ÉâÁµêÊûú",
      encodeError: "‚ö†Ô∏è „Ç®„É≥„Ç≥„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
      decodeError: "‚ö†Ô∏è „Éá„Ç≥„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "ÂÖ•ÂäõÊ¨Ñ„Å´„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„Äå„Ç®„É≥„Ç≥„Éº„Éâ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅURL„Ç®„É≥„Ç≥„Éº„ÉâÂΩ¢Âºè„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Äå„Éá„Ç≥„Éº„Éâ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅURL„Ç®„É≥„Ç≥„Éº„Éâ„Åï„Çå„ÅüÊñáÂ≠óÂàó„ÇíÂÖÉ„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„Å´Êàª„Åõ„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„ÅÆ„Ç≥„Éî„Éº „Éú„Çø„É≥„ÅßÁµêÊûú„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    uuidGenerator: {
      title: "UUID „Ç∏„Çß„Éç„É¨„Éº„Çø„Éº",
      generateButton: "Êñ∞„Åó„ÅÑUUID„ÇíÁîüÊàê",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "ÁîüÊàê„Åô„ÇãUUID„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÇíÈÅ∏Êäû„Åó„Åæ„Åô (v1, v3, v4, v5)„ÄÇ",
          "„ÄåÁîüÊàê„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®UUID„Åå‰ΩúÊàê„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁîüÊàê„Åï„Çå„ÅüUUID„ÅØÁµêÊûúÊ¨Ñ„Å´Ë°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûúÊ¨Ñ„ÅÆ„Ç≥„Éî„Éº „Éú„Çø„É≥„ÅßUUID„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®ÁîüÊàê„Åï„Çå„ÅüUUID„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    wordCounter: {
      title: "ÂçòË™û„Å®ÊñáÂ≠ó„ÅÆ„Ç´„Ç¶„É≥„Éà",
      placeholder: "„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ...",
      wordLabel: "ÂçòË™ûÊï∞",
      charLabel: "ÊñáÂ≠óÊï∞",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "„ÉÜ„Ç≠„Çπ„Éà„Ç®„É™„Ç¢„Å´ÊñáÁ´†„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "ÂÖ•Âäõ„Åó„Åü„ÉÜ„Ç≠„Çπ„Éà„ÅÆÂçòË™ûÊï∞„Å®ÊñáÂ≠óÊï∞„Åå„É™„Ç¢„É´„Çø„Ç§„É†„ÅßË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÂêÑÊï∞Â≠ó„ÅÆÊ®™„ÅÆ„Ç≥„Éî„Éº „Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶„ÄÅÂçòË™ûÊï∞„ÇÑÊñáÂ≠óÊï∞„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„ÉÜ„Ç≠„Çπ„ÉàÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    actionButtons: {
      backButton: "Êàª„Çã",
      resetButton: "„É™„Çª„ÉÉ„Éà",
    },
    qrCodeGenerator: {
      title: "QR„Ç≥„Éº„Éâ„Ç∏„Çß„Éç„É¨„Éº„Çø„Éº",
      inputPlaceholder: "QR„Ç≥„Éº„Éâ„Å´„Åô„Çã„ÉÜ„Ç≠„Çπ„Éà„ÇÑURL„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      generateButton: "QR„Ç≥„Éº„Éâ„ÇíÁîüÊàê",
      downloadButton: "„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ",
      actionButtons: { reset: "„É™„Çª„ÉÉ„Éà" },
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "ÂÖ•ÂäõÊ¨Ñ„Å´QR„Ç≥„Éº„Éâ„Å´Â§âÊèõ„Åó„Åü„ÅÑ„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "QR„Ç≥„Éº„ÉâÁîüÊàê„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ‰∏ã„Å´QR„Ç≥„Éº„Éâ„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Ç≥„Éî„Éº „Éú„Çø„É≥„Åß„ÉÜ„Ç≠„Çπ„Éà„Çí„Ç≥„Éî„Éº„Åó„Åü„Çä„ÄÅ„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ „Éú„Çø„É≥„ÅßQR„Ç≥„Éº„Éâ„ÇíSVG„Éï„Ç°„Ç§„É´„Å®„Åó„Å¶‰øùÂ≠ò„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    regexTester: {
      title: "Ê≠£Ë¶èË°®Áèæ„ÉÜ„Çπ„Çø„Éº",
      patternPlaceholder: "Ê≠£Ë¶èË°®Áèæ„Éë„Çø„Éº„É≥ (‰æã: \\d+)",
      textPlaceholder: "„ÉÜ„Çπ„Éà„Åô„Çã„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ",
      testButton: "„ÉÜ„Çπ„Éà",
      invalidRegex: "ÁÑ°Âäπ„Å™Ê≠£Ë¶èË°®Áèæ„Åß„Åô",
      noMatch: "‰∏ÄËá¥„Åô„Çã„ÇÇ„ÅÆ„Åå„ÅÇ„Çä„Åæ„Åõ„Çì",
      resultLabel: "ÁµêÊûú",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "„Éë„Çø„Éº„É≥ÂÖ•ÂäõÊ¨Ñ„Å´Ê≠£Ë¶èË°®Áèæ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "„ÉÜ„Ç≠„Çπ„ÉàÂÖ•ÂäõÊ¨Ñ„Å´ÂØæË±°ÊñáÂ≠óÂàó„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "„ÉÜ„Çπ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ‰∏ÄËá¥„Åô„ÇãÁµêÊûú„Åå‰∏ã„Å´Ë°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Ç≥„Éî„Éº „Éú„Çø„É≥„ÅßÁµêÊûú„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    loremIpsum: {
      title: "Lorem Ipsum „Ç∏„Çß„Éç„É¨„Éº„Çø„Éº",
      paragraphsLabel: "ÊÆµËêΩÊï∞",
      generateButton: "ÁîüÊàê",
      resultLabel: "ÁµêÊûú",
      noResult: "„Åæ„Å†ÁîüÊàê„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "ÁîüÊàê„Åô„ÇãÊÆµËêΩ„ÅÆÊï∞„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "ÁîüÊàê„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÊåáÂÆö„Åó„ÅüÊÆµËêΩÊï∞„ÅÆLorem Ipsum„ÉÜ„Ç≠„Çπ„Éà„Åå‰ΩúÊàê„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„Ç®„É™„Ç¢„Åß„ÉÜ„Ç≠„Çπ„Éà„ÇíÁ¢∫Ë™ç„Åó„ÄÅ„Ç≥„Éî„Éº „Éú„Çø„É≥„Åß„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    wikiSummary: {
      title: "Wikipedia „Çµ„Éû„É™„Éº",
      inputPlaceholder: "„Éà„Éî„ÉÉ„ÇØ„ÇíÂÖ•ÂäõÔºà‰æã: JavaScriptÔºâ",
      searchButton: "Ê§úÁ¥¢",
      resultLabel: "Ë¶ÅÁ¥Ñ",
      noResult: "„Åæ„Å†ÁµêÊûú„Åå„ÅÇ„Çä„Åæ„Åõ„Çì",
      notFound: "Ë¶ÅÁ¥Ñ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì",
      error: "Ë¶ÅÁ¥Ñ„ÅÆÂèñÂæó‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "Ê§úÁ¥¢„Åó„Åü„ÅÑWikipedia„ÅÆ„Éà„Éî„ÉÉ„ÇØ„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„ÄåÊ§úÁ¥¢„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„Åù„ÅÆ„Éà„Éî„ÉÉ„ÇØ„ÅÆË¶ÅÁ¥ÑÊÉÖÂ†±„ÅåÂèñÂæó„Åï„Çå„Åæ„Åô„ÄÇ",
          "Ë¶ÅÁ¥Ñ„ÅåÂ≠òÂú®„Åô„ÇãÂ†¥Âêà„ÄÅÁµêÊûúÊ¨Ñ„Å´Ë°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "Ë¶ÅÁ¥Ñ„ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„ÄÅ„ÄåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Äç„Å®Ë°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    timeDiff: {
      title: "ÊôÇÈñìÂ∑ÆË®àÁÆóÊ©ü",
      calculateButton: "Â∑Æ„ÇíË®àÁÆó",
      resultLabel: "ÁµêÊûú",
      invalidDate: "ÁÑ°Âäπ„Å™Êó•‰ªò„Åß„Åô„ÄÇ",
      noResult: "„Åæ„Å†ÁµêÊûú„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ",
      day: "Êó•",
      hour: "ÊôÇÈñì",
      minute: "ÂàÜ",
      second: "Áßí",
      actionButtons: { reset: "„É™„Çª„ÉÉ„Éà" },
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "ÈñãÂßãÊó•ÊôÇ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "ÁµÇ‰∫ÜÊó•ÊôÇ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "Ë®àÁÆó„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ2„Å§„ÅÆÊó•‰ªò„ÅÆÈñì„ÅÆÂ∑ÆÔºàÊó•„ÄÅÊôÇÈñì„ÄÅÂàÜ„ÄÅÁßíÔºâ„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„ÅÆ„Ç≥„Éî„Éº „Éú„Çø„É≥„ÅßË®àÁÆóÁµêÊûú„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    diffChecker: {
      title: "Â∑ÆÂàÜ„ÉÅ„Çß„ÉÉ„Ç´„Éº",
      inputPlaceholderA: "ÊúÄÂàù„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      inputPlaceholderB: "2Áï™ÁõÆ„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      compareButton: "ÊØîËºÉ„Åô„Çã",
      resultLabel: "ÁµêÊûú",
      noDifference: "Â∑ÆÂàÜ„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì",
      actionButtons: {
        backButton: "Êàª„Çã",
        resetButton: "„É™„Çª„ÉÉ„Éà",
      },
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "ÊØîËºÉ„Åó„Åü„ÅÑ„ÉÜ„Ç≠„Çπ„ÉàA„Å®„ÉÜ„Ç≠„Çπ„ÉàB„Çí„Åù„Çå„Åû„ÇåÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„ÄåÊØîËºÉ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ2„Å§„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÅÆÂ∑ÆÂàÜ„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "Â∑ÆÂàÜ„ÅØ'-'„Åå„ÉÜ„Ç≠„Çπ„ÉàA„ÄÅ'+'„Åå„ÉÜ„Ç≠„Çπ„ÉàB„ÇíÁ§∫„Åó„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„Å´„ÅÇ„Çã„Ç≥„Éî„Éº „Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    markdownToHtml: {
      title: "Markdown ‚Üí HTML Â§âÊèõÂô®",
      inputPlaceholder: "Markdown„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      convertButton: "Â§âÊèõ„Åô„Çã",
      resultLabel: "ÁµêÊûú",
      noResult: "ÁµêÊûú„Åå„ÅÇ„Çä„Åæ„Åõ„Çì",
      actionButtons: {
        backButton: "Êàª„Çã",
        resetButton: "„É™„Çª„ÉÉ„Éà",
      },
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "ÂÖ•ÂäõÊ¨Ñ„Å´Markdown„ÉÜ„Ç≠„Çπ„Éà„ÇíË®òÂÖ•„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "Â§âÊèõ„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅMarkdown„ÅåHTML„Å®„Åó„Å¶„É¨„É≥„ÉÄ„É™„É≥„Ç∞„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„Ç®„É™„Ç¢„Åß„É¨„É≥„ÉÄ„É™„É≥„Ç∞„Åï„Çå„ÅüHTML„ÇíÁ¢∫Ë™ç„Åó„ÄÅ„Ç≥„Éî„Éº „Éú„Çø„É≥„Åß„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    jwtEncoderDecoder: {
      title: "JWT „Éá„Ç≥„Éº„ÉÄ„Éº/„Ç®„É≥„Ç≥„Éº„ÉÄ„Éº",
      inputPlaceholder:
        '„Éá„Ç≥„Éº„Éâ„Åô„ÇãJWT„Åæ„Åü„ÅØ„Ç®„É≥„Ç≥„Éº„Éâ„Åô„ÇãJSON„ÇíÂÖ•Âäõ\n(„Ç®„É≥„Ç≥„Éº„ÉâÊôÇ„ÅØ{"header": {...}, "payload": {...}}ÂΩ¢Âºè)',
      decodeButton: "„Éá„Ç≥„Éº„Éâ",
      encodeButton: "„Ç®„É≥„Ç≥„Éº„Éâ",
      invalidJwt: "ÁÑ°Âäπ„Å™JWTÂΩ¢Âºè„Åß„Åô„ÄÇ",
      invalidBase64: "Base64„ÅÆ„Éá„Ç≥„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ",
      decodeError: "„Éá„Ç≥„Éº„Éâ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ",
      encodeFormatError:
        "„Ç®„É≥„Ç≥„Éº„Éâ„Åô„ÇãJSON„Å´„ÅØheader„Å®payload„ÅÆ‰∏°Êñπ„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ",
      encodeError: "„Ç®„É≥„Ç≥„Éº„Éâ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ",
      outputLabel: "ÁµêÊûú",
      noOutput: "ÁµêÊûú„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "JWTÊñáÂ≠óÂàó„ÇíÂÖ•Âäõ„Åô„Çã„Å®„ÄÅÂÜÖÂÆπ„Çí„Éá„Ç≥„Éº„Éâ„Åß„Åç„Åæ„Åô„ÄÇ",
          "„Éá„Ç≥„Éº„Éâ„Åï„Çå„ÅüHeader„Å®Payload„ÅØË¶ã„ÇÑ„Åô„ÅÑJSONÂΩ¢Âºè„ÅßË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Ç®„É≥„Ç≥„Éº„Éâ„Åô„Çã„Å´„ÅØ„ÄÅ{ header: {...}, payload: {...} } „ÅÆJSONÂΩ¢Âºè„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "„Ç®„É≥„Ç≥„Éº„Éâ„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅbase64urlÂΩ¢Âºè„ÅÆJWTÊñáÂ≠óÂàó„ÅåÁîüÊàê„Åï„Çå„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®Âá∫Âäõ„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    cssColorPalette: {
      title: "CSS„Ç´„É©„Éº„Éë„É¨„ÉÉ„Éà„Ç∏„Çß„Éç„É¨„Éº„Çø„Éº",
      baseColorLabel: "Âü∫Êú¨Ëâ≤„ÇíÈÅ∏Êäû",
      generateButton: "„Éë„É¨„ÉÉ„Éà„ÇíÁîüÊàê",
      clickToCopy: "„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶„Ç´„É©„Éº„Ç≥„Éº„Éâ„Çí„Ç≥„Éî„Éº",
      actionButtons: {
        reset: "„É™„Çª„ÉÉ„Éà",
      },
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "„Ç´„É©„Éº„Éî„ÉÉ„Ç´„Éº„ÅßÂü∫Êú¨Ëâ≤„ÇíÈÅ∏Êäû„Åó„Åæ„Åô„ÄÇ",
          "„Äå„Éë„É¨„ÉÉ„ÉàÁîüÊàê„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÈÅ∏Êäû„Åó„ÅüËâ≤„ÇíÂü∫„Å´Êòé„Çã„Åï„ÇíË™øÊï¥„Åó„Åü„Ç´„É©„Éº„Éë„É¨„ÉÉ„Éà„ÅåÁîüÊàê„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁîüÊàê„Åï„Çå„Åü„Ç´„É©„Éº„Éë„É¨„ÉÉ„Éà„ÅØÁîªÈù¢„Å´Ë°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÂêÑËâ≤„ÅÆ„Éñ„É≠„ÉÉ„ÇØ„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅHEX„Ç≥„Éº„Éâ„Åå„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂü∫Êú¨Ëâ≤„Å®„Éë„É¨„ÉÉ„Éà„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    csvJson: {
      title: "CSV ‚Üî JSON„Ç≥„É≥„Éê„Éº„Çø„Éº",
      inputPlaceholder: "CSV„Åæ„Åü„ÅØJSON„Éá„Éº„Çø„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      convertToJsonButton: "JSON„Å´Â§âÊèõ",
      convertToCsvButton: "CSV„Å´Â§âÊèõ",
      convertError: "Â§âÊèõ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ",
      resultLabel: "Â§âÊèõÁµêÊûú",
      noResult: "ÁµêÊûú„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ",
      actionButtons: {
        reset: "„É™„Çª„ÉÉ„Éà",
      },
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "ÂÖ•ÂäõÊ¨Ñ„Å´CSV„Åæ„Åü„ÅØJSON„Éá„Éº„Çø„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„ÄåJSON„Å´Â§âÊèõ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®CSV„ÅåJSON„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "„ÄåCSV„Å´Â§âÊèõ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®JSON„ÅåCSV„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "Â§âÊèõÁµêÊûú„ÅØÂá∫ÂäõÊ¨Ñ„Å´Ë°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„Å´„ÅÇ„Çã„Ç≥„Éî„Éº „Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    htmlTableGenerator: {
      title: "HTML„ÉÜ„Éº„Éñ„É´„Ç∏„Çß„Éç„É¨„Éº„Çø„Éº",
      rowsPlaceholder: "Ë°åÊï∞„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºà‰æãÔºö3Ôºâ",
      colsPlaceholder: "ÂàóÊï∞„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºà‰æãÔºö4Ôºâ",
      generateButton: "„ÉÜ„Éº„Éñ„É´ÁîüÊàê",
      resetButton: "„É™„Çª„ÉÉ„Éà",
      resultLabel: "ÁîüÊàê„Åï„Çå„ÅüHTML„ÉÜ„Éº„Éñ„É´„Ç≥„Éº„Éâ",
      errorInvalidNumber: "Ê≠£„Åó„ÅÑÊï∞Â≠ó„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºà1‰ª•‰∏äÔºâ„ÄÇ",
      noResult: "ÁµêÊûú„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ",
      actionButtons: {
        reset: "„É™„Çª„ÉÉ„Éà",
      },
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "„ÉÜ„Éº„Éñ„É´„ÅÆË°åÊï∞„Å®ÂàóÊï∞„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„ÄåÁîüÊàê„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅHTML„ÉÜ„Éº„Éñ„É´„Ç≥„Éº„Éâ„Åå‰ΩúÊàê„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„Å´„ÅÇ„Çã„Ç≥„Éî„Éº „Éú„Çø„É≥„ÅßÁîüÊàê„Åï„Çå„ÅüHTML„Ç≥„Éº„Éâ„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    httpStatus: {
      title: "HTTP„Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ„ÉÅ„Çß„ÉÉ„Ç´„Éº",
      inputPlaceholder: "‰æã: 200, 404, 500...",
      checkButton: "Á¢∫Ë™ç",
      notFound: "‰∏çÊòé„Å™„Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ„Åß„Åô„ÄÇ",
      noResult: "Ë™¨Êòé„ÇíÁ¢∫Ë™ç„Åô„Çã„Å´„ÅØ„Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "HTTP„Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Åæ„ÅôÔºà‰æã: 200, 404Ôºâ„ÄÇ",
          "„ÄåÁ¢∫Ë™ç„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ„ÅÆË™¨Êòé„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "Ë™¨Êòé„Åå„Å™„ÅÑÂ†¥Âêà„ÅØ„ÄåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Äç„Å®„ÅÑ„ÅÜ„É°„ÉÉ„Çª„Éº„Ç∏„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    urlQueryParser: {
      title: "URL„ÇØ„Ç®„É™„Éë„Éº„Çµ„ÉºÔºè„Éì„É´„ÉÄ„Éº",
      inputPlaceholder:
        "URL„Åæ„Åü„ÅØ ?key=value&key2=value2 ÂΩ¢Âºè„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      parseButton: "„ÇØ„Ç®„É™„ÇíËß£Êûê",
      editParamsLabel: "Ëß£Êûê„Åï„Çå„Åü„Éë„É©„É°„Éº„Çø„ÇíÁ∑®ÈõÜ",
      buildButton: "„ÇØ„Ç®„É™ÊñáÂ≠óÂàó„Çí‰ΩúÊàê",
      buildResultLabel: "‰ΩúÊàê„Åï„Çå„Åü„ÇØ„Ç®„É™ÊñáÂ≠óÂàó",
      parseError: "Ëß£Êûê‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "ÂÖ•ÂäõÊ¨Ñ„Å´URL„Åæ„Åü„ÅØ„ÇØ„Ç®„É™ÊñáÂ≠óÂàó„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„Äå„Éë„Éº„Çπ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅ„ÇØ„Ç®„É™„Éë„É©„É°„Éº„Çø„Åå„Ç≠„Éº„Å®ÂÄ§„ÅÆÂΩ¢Âºè„ÅßË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "Ë°®Á§∫„Åï„Çå„Åü„Éë„É©„É°„Éº„Çø„ÅÆÂÄ§„ÇíÁõ¥Êé•Á∑®ÈõÜ„Åß„Åç„Åæ„Åô„ÄÇ",
          "„Äå„Éì„É´„Éâ„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÁ∑®ÈõÜ„Åó„Åü„Éë„É©„É°„Éº„Çø„Åã„ÇâÊñ∞„Åó„ÅÑ„ÇØ„Ç®„É™ÊñáÂ≠óÂàó„ÅåÁîüÊàê„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûú„ÅÆÊ®™„ÅÆ„Ç≥„Éî„Éº „Éú„Çø„É≥„ÅßÁîüÊàê„Åï„Çå„Åü„ÇØ„Ç®„É™ÊñáÂ≠óÂàó„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    uuidValidator: {
      title: "UUID„Éê„É™„Éá„Éº„Çø„Éº",
      inputPlaceholder:
        "UUID„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºà‰æã: 123e4567-e89b-12d3-a456-426614174000Ôºâ",
      validateButton: "Ê§úË®º„Åô„Çã",
      validResult: "ÊúâÂäπ„Å™UUID„Åß„ÅôÔºÅ",
      invalidResult: "ÁÑ°Âäπ„Å™UUIDÂΩ¢Âºè„Åß„Åô„ÄÇ",
      versionLabel: "UUID„Éê„Éº„Ç∏„Éß„É≥",
      noResult: "ÁµêÊûú„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "Ê§úË®º„Åó„Åü„ÅÑUUID„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ",
          "„ÄåÊ§úË®º„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅUUID„ÅåÊúâÂäπ„ÅãÁ¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇ",
          "ÊúâÂäπ„Å™Â†¥Âêà„ÄÅÁµêÊûúÊ¨Ñ„Å´„ÄåÊúâÂäπ„Äç„Å®Ë°®Á§∫„Åï„Çå„ÄÅUUID„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÇÇÁ¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇ",
          "ÁÑ°Âäπ„Å™Â†¥Âêà„ÄÅ„ÄåÁÑ°Âäπ„Äç„Å®Ë°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ",
          "„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„ÄÅÂÖ•Âäõ„Å®ÁµêÊûú„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åô„ÄÇ",
        ],
      },
    },
    escapeConverter: {
      title: "„Ç®„Çπ„Ç±„Éº„ÉóÊñáÂ≠óÂ§âÊèõ",
      inputPlaceholder: "„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ...",
      convertButton: "Â§âÊèõ",
      resultLabel: "ÁµêÊûú",
      resetButton: "„É™„Çª„ÉÉ„Éà",
      tutorial: {
        title: "‰Ωø„ÅÑÊñπ",
        steps: [
          "‰∏ä„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„Éú„ÉÉ„ÇØ„Çπ„Å´Â§âÊèõ„Åó„Åü„ÅÑÊñáÂ≠óÂàó„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
          "„ÄåÂ§âÊèõ„Äç„Éú„Çø„É≥„ÇíÊäº„Åô„Å®ÊñáÂ≠óÂàó„Åå„Ç®„Çπ„Ç±„Éº„ÉóÊñáÂ≠ó„Å´Â§âÊèõ„Åï„Çå„Åæ„Åô„ÄÇ",
          "ÁµêÊûúÊ®™„ÅÆ„Ç≥„Éî„Éº „Éú„Çø„É≥„Åß„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åß„Åç„Åæ„Åô„ÄÇ",
          "„Äå„É™„Çª„ÉÉ„Éà„Äç„Éú„Çø„É≥„ÅßÂÖ•Âäõ„Å®ÁµêÊûú„Çí„Åô„Åπ„Å¶„ÇØ„É™„Ç¢„Åß„Åç„Åæ„Åô„ÄÇ",
        ],
      },
    },
  },
  ko: {
    title: "üõ† DevTools Hub",
    description: "Í∞úÎ∞úÏûê¬∑ÌÅ¨Î¶¨ÏóêÏù¥ÌÑ∞Î•º ÏúÑÌïú Í∞ÑÎã®ÌïòÍ≥† Îπ†Î•∏ Î≥ÄÌôò/ÏÉùÏÑ± ÎèÑÍµ¨ Î™®Ïùå",
    searchPlaceholder: "ÎèÑÍµ¨ Í≤ÄÏÉâ...",
    noResults: "Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.",
    tools: [
      {
        href: "/ascii-to-text",
        label: "ASCII ‚Üí Text Î≥ÄÌôòÍ∏∞",
        desc: "ASCII ÏΩîÎìú ‚Üí ÌÖçÏä§Ìä∏ Î≥ÄÌôò",
        keywords: [
          "ÏïÑÏä§ÌÇ§",
          "ascii",
          "ÌÖçÏä§Ìä∏",
          "Î¨∏Ïûê",
          "Î≥ÄÌôò",
          "ascii to text",
          "„Ç¢„Çπ„Ç≠„Éº",
          "ÊñáÂ≠óÂ§âÊèõ",
        ],
      },
      {
        href: "/text-to-ascii",
        label: "Text ‚Üí ASCII Î≥ÄÌôòÍ∏∞",
        desc: "ÌÖçÏä§Ìä∏ ‚Üí ASCII ÏΩîÎìú Î≥ÄÌôò",
        keywords: [
          "ÏïÑÏä§ÌÇ§",
          "ascii",
          "text",
          "ÏΩîÎìú",
          "Î≥ÄÌôò",
          "text to ascii",
          "ÊñáÂ≠ó„Ç≥„Éº„Éâ",
          "„ÉÜ„Ç≠„Çπ„ÉàÂ§âÊèõ",
        ],
      },
      {
        href: "/base64",
        label: "Base64 Ïù∏ÏΩîÎî©/ÎîîÏΩîÎî©",
        desc: "ÌÖçÏä§Ìä∏Î•º Base64Î°ú Î≥ÄÌôò/Î≥µÏõê",
        keywords: [
          "64",
          "base64",
          "Ïù∏ÏΩîÎî©",
          "ÎîîÏΩîÎî©",
          "encode",
          "decode",
          "„Éô„Éº„Çπ64",
          "ÊñáÂ≠óÂàóÂ§âÊèõ",
        ],
      },
      {
        href: "/url-encode",
        label: "URL Ïù∏ÏΩîÎî©/ÎîîÏΩîÎî©",
        desc: "URL ÏïàÏ†Ñ Î¨∏ÏûêÏó¥Î°ú Î≥ÄÌôò/Î≥µÏõê",
        keywords: [
          "url",
          "Ïù∏ÏΩîÎî©",
          "ÎîîÏΩîÎî©",
          "encode",
          "decode",
          "„Éë„Éº„Çª„É≥„Éà„Ç®„É≥„Ç≥„Éº„Éâ",
          "„Ç®„É≥„Ç≥„Éº„Éâ",
        ],
      },
      {
        href: "/uuid-generator",
        label: "UUID ÏÉùÏÑ±Í∏∞",
        desc: "ÎûúÎç§ UUID (v1,v3,v4,v5) ÏÉùÏÑ±",
        keywords: [
          "uuid",
          "v4",
          "v1",
          "v3",
          "v5",
          "ÏÉùÏÑ±",
          "ÎûúÎç§",
          "„É¶„Éã„Éº„ÇØID",
          "ÁîüÊàê",
        ],
      },
      {
        href: "/timestamp",
        label: "ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ Î≥ÄÌôòÍ∏∞",
        desc: "Unix ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ ‚Üî ÎÇ†Ïßú",
        keywords: [
          "ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ",
          "ÎÇ†Ïßú",
          "ÏãúÍ∞Ñ",
          "Î≥ÄÌôò",
          "timestamp",
          "unix",
          "Êó•ÊôÇÂ§âÊèõ",
        ],
      },
      {
        href: "/slugify",
        label: "Slugify Î≥ÄÌôòÍ∏∞",
        desc: "Î¨∏ÏûêÏó¥ÏùÑ URL Ïä¨Îü¨Í∑∏Î°ú",
        keywords: ["slug", "Ïä¨Îü¨Í∑∏", "url", "Î≥ÄÌôò", "slugify", "„Çπ„É©„ÉÉ„Ç∞"],
      },
      {
        href: "/word-counter",
        label: "Îã®Ïñ¥, Í∏ÄÏûê ÏÑ∏Í∏∞",
        desc: "Îã®Ïñ¥ Ïàò/Í∏ÄÏûê Ïàò ÏÑ∏Í∏∞",
        keywords: [
          "Îã®Ïñ¥",
          "Í∏ÄÏûê",
          "ÏÑ∏Í∏∞",
          "Ïπ¥Ïö¥ÌÑ∞",
          "count",
          "ÊñáÂ≠óÊï∞",
          "„ÉØ„Éº„Éâ„Ç´„Ç¶„É≥„Éà",
        ],
      },
      {
        href: "/color-converter",
        label: "HEX ‚Üî RGB Î≥ÄÌôòÍ∏∞",
        desc: "Ïª¨Îü¨ ÏΩîÎìú Î≥ÄÌôò",
        keywords: ["hex", "rgb", "Ïª¨Îü¨", "ÏÉâÏÉÅ", "Â§âÊèõ", "„Ç´„É©„Éº„Ç≥„Éº„Éâ"],
      },
      {
        href: "/case-converter",
        label: "ÎåÄÏÜåÎ¨∏Ïûê Î≥ÄÌôòÍ∏∞",
        desc: "Uppercase, snake_case, camelCase Îì±",
        keywords: [
          "ÎåÄÏÜåÎ¨∏Ïûê",
          "Î≥ÄÌôò",
          "uppercase",
          "lowercase",
          "camel",
          "snake",
          "ÏºÄÏù¥Ïä§",
          "Â§âÊèõ",
        ],
      },
      {
        href: "/hash-generator",
        label: "SHA-256 Ìï¥Ïãú ÏÉùÏÑ±Í∏∞",
        desc: "Î¨∏ÏûêÏó¥Ïùò Ìï¥Ïãú Í∞í ÏÉùÏÑ±",
        keywords: [
          "Ìï¥Ïãú",
          "sha256",
          "hash",
          "ÏÉùÏÑ±",
          "ÏïîÌò∏Ìôî",
          "„Éè„ÉÉ„Ç∑„É•",
          "ÁîüÊàê",
        ],
      },
      {
        href: "/base-converter",
        label: "ÏßÑÏàò Î≥ÄÌôòÍ∏∞",
        desc: "10ÏßÑÏàò, 2ÏßÑÏàò, 16ÏßÑÏàò Î≥ÄÌôò",
        keywords: ["ÏßÑÏàò", "Î≥ÄÌôò", "decimal", "binary", "hex", "Êï∞ÂÄ§Â§âÊèõ"],
      },
      {
        href: "/random-password",
        label: "ÎπÑÎ∞ÄÎ≤àÌò∏ ÏÉùÏÑ±Í∏∞",
        desc: "Î¨¥ÏûëÏúÑ ÎπÑÎ∞ÄÎ≤àÌò∏ ÏÉùÏÑ±Í∏∞",
        keywords: [
          "ÎπÑÎ∞ÄÎ≤àÌò∏",
          "Ìå®Ïä§ÏõåÎìú",
          "ÎûúÎç§",
          "ÏÉùÏÑ±",
          "password",
          "ÁîüÊàê",
          "„Éë„Çπ„ÉØ„Éº„Éâ",
        ],
      },
      {
        href: "/html-entities",
        label: "HTML ÏóîÌã∞Ìã∞ Î≥ÄÌôòÍ∏∞",
        desc: "HTML ÌäπÏàòÎ¨∏Ïûê Ïù∏ÏΩîÎî©/ÎîîÏΩîÎî©",
        keywords: ["html", "ÏóîÌã∞Ìã∞", "ÌäπÏàòÎ¨∏Ïûê", "Ïù∏ÏΩîÎî©", "ÎîîÏΩîÎî©", "Â§âÊèõ"],
      },
      {
        href: "/json-formatter",
        label: "JSON Ìè¨Îß§ÌÑ∞",
        desc: "JSON Îç∞Ïù¥ÌÑ∞ Ìè¨Îß∑ Î∞è Ï†ïÎ†¨",
        keywords: [
          "json",
          "Ìè¨Îß§ÌÑ∞",
          "format",
          "Ï†ïÎ†¨",
          "„Éï„Ç©„Éº„Éû„ÉÉ„Éà",
          "„Ç∏„Çß„Ç§„ÇΩ„É≥",
        ],
      },
      {
        href: "/qr-code",
        label: "QR ÏΩîÎìú ÏÉùÏÑ±Í∏∞",
        desc: "ÌÖçÏä§Ìä∏Î•º QR ÏΩîÎìúÎ°ú Î≥ÄÌôòÌï¥ Ï†ÄÏû•",
        keywords: ["qr", "ÏΩîÎìú", "ÏÉùÏÑ±", "qr code", "qrÁîüÊàê", "„ÉÜ„Ç≠„Çπ„ÉàÂ§âÊèõ"],
      },
      {
        href: "/regex-tester",
        label: "Ï†ïÍ∑úÏãù ÌÖåÏä§Ìä∏",
        desc: "Ï†ïÍ∑úÌëúÌòÑÏãùÏùÑ Ïã§ÏãúÍ∞ÑÏúºÎ°ú ÌÖåÏä§Ìä∏",
        keywords: ["Ï†ïÍ∑úÏãù", "regex", "ÌÖåÏä§Ìä∏", "pattern", "„Éë„Çø„Éº„É≥"],
      },
      {
        href: "/lorem-ipsum",
        label: "Î°úÎ†ò ÏûÖÏà® ÏÉùÏÑ±Í∏∞",
        desc: "ÎîîÏûêÏù∏Ïö© ÎçîÎØ∏ ÌÖçÏä§Ìä∏ ÏÉùÏÑ±",
        keywords: [
          "lorem",
          "ipsum",
          "ÎçîÎØ∏",
          "ÌÖçÏä§Ìä∏",
          "ÁîüÊàê",
          "„ÉÄ„Éü„Éº„ÉÜ„Ç≠„Çπ„Éà",
        ],
      },
      {
        href: "/wiki-summary",
        label: "ÏúÑÌÇ§Î∞±Í≥º ÏöîÏïΩÍ∏∞",
        desc: "Wikipedia Î¨∏ÏÑú ÎÇ¥Ïö©ÏùÑ Í∞ÑÎã®Ìûà ÏöîÏïΩ",
        keywords: ["ÏúÑÌÇ§", "ÏúÑÌÇ§Î∞±Í≥º", "wikipedia", "ÏöîÏïΩ", "summary", "Ë¶ÅÁ¥Ñ"],
      },
      {
        href: "/time-diff",
        label: "ÏãúÍ∞Ñ Ï∞®Ïù¥ Í≥ÑÏÇ∞Í∏∞",
        desc: "Îëê ÎÇ†Ïßú/ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ Í∞Ñ Ï∞®Ïù¥ Í≥ÑÏÇ∞",
        keywords: ["ÏãúÍ∞Ñ", "Ï∞®Ïù¥", "Í≥ÑÏÇ∞", "ÎÇ†Ïßú", "timestamp", "Â∑ÆÂàÜ", "Ë®àÁÆó"],
      },
      {
        href: "/diff-checker",
        label: "ÌÖçÏä§Ìä∏ ÎπÑÍµê ÎèÑÍµ¨",
        desc: "Îëê ÌÖçÏä§Ìä∏Ïùò Ï∞®Ïù¥ ÌôïÏù∏",
        keywords: ["diff", "ÎπÑÍµê", "ÌÖçÏä§Ìä∏", "Ï∞®Ïù¥", "ÊØîËºÉ", "Â∑ÆÂàÜ"],
      },
      {
        href: "/markdown-html",
        label: "Markdown ‚Üî HTML Î≥ÄÌôòÍ∏∞",
        desc: "ÎßàÌÅ¨Îã§Ïö¥Í≥º HTML ÏÉÅÌò∏ Î≥ÄÌôò",
        keywords: ["markdown", "html", "Î≥ÄÌôò", "ÎßàÌÅ¨Îã§Ïö¥", "Â§âÊèõ"],
      },
      {
        href: "/jwt-encoder-decoder",
        label: "JWT ÎîîÏΩîÎçî/Ïù∏ÏΩîÎçî",
        desc: "JWT ÌÜ†ÌÅ∞ÏùÑ ÎîîÏΩîÎî©ÌïòÍ≥† JSONÏùÑ JWT ÌòïÏãùÏúºÎ°ú Ïù∏ÏΩîÎî© (ÏÑúÎ™Ö Ï†úÏô∏)",
        keywords: ["jwt", "ÌÜ†ÌÅ∞", "Ïù∏ÏΩîÎî©", "ÎîîÏΩîÎî©", "decode", "encode"],
      },
      {
        href: "/css-color-palette",
        label: "CSS Ïª¨Îü¨ ÌåîÎ†àÌä∏ ÏÉùÏÑ±Í∏∞",
        desc: "Í∏∞Î≥∏ ÏÉâÏÉÅÏúºÎ°úÎ∂ÄÌÑ∞ CSSÏö© Ïª¨Îü¨ ÌåîÎ†àÌä∏Î•º ÏÉùÏÑ±Ìï©ÎãàÎã§",
        keywords: ["css", "Ïª¨Îü¨", "ÌåîÎ†àÌä∏", "ÏÉâÏÉÅ", "palette", "ÁîüÊàê"],
      },
      {
        href: "/csv-json",
        label: "CSV ‚Üî JSON Î≥ÄÌôòÍ∏∞",
        desc: "CSVÏôÄ JSON ÌòïÏãùÏùÑ ÏÉÅÌò∏ Î≥ÄÌôòÌï©ÎãàÎã§",
        keywords: ["csv", "json", "Î≥ÄÌôò", "Â§âÊèõ", "„Ç∏„Çß„Ç§„ÇΩ„É≥", "„Ç∑„Éº„Ç®„Çπ„Éñ„Ç§"],
      },
      {
        href: "/html-table-generator",
        label: "HTML ÌÖåÏù¥Î∏î ÏÉùÏÑ±Í∏∞",
        desc: "ÏûÖÎ†•Ìïú Îç∞Ïù¥ÌÑ∞Î•º HTML ÌÖåÏù¥Î∏îÎ°ú ÎßåÎì≠ÎãàÎã§",
        keywords: ["html", "ÌÖåÏù¥Î∏î", "table", "ÏÉùÏÑ±", "ÁîüÊàê"],
      },
      {
        href: "/http-status",
        label: "HTTP ÏÉÅÌÉú ÏΩîÎìú ÏÑ§Î™ÖÍ∏∞",
        desc: "HTTP ÏÉÅÌÉú ÏΩîÎìúÏóê ÎåÄÌïú ÏÑ§Î™ÖÏùÑ Ï†úÍ≥µÌï©ÎãàÎã§",
        keywords: ["http", "ÏÉÅÌÉúÏΩîÎìú", "status", "ÏΩîÎìú", "Ë™¨Êòé"],
      },
      {
        href: "/url-query-parser",
        label: "URL ÏøºÎ¶¨ ÌååÎùºÎØ∏ÌÑ∞ ÌååÏÑú/ÎπåÎçî",
        desc: "URL ÏøºÎ¶¨ Î¨∏ÏûêÏó¥ÏùÑ Î∂ÑÏÑùÌïòÍ≥† ÏÉùÏÑ±Ìï©ÎãàÎã§",
        keywords: ["url", "ÏøºÎ¶¨", "ÌååÎùºÎØ∏ÌÑ∞", "parser", "builder", "Ëß£Êûê"],
      },
      {
        href: "/uuid-validator",
        label: "UUID Í≤ÄÏ¶ùÍ∏∞",
        desc: "UUID ÌòïÏãùÏù¥ Ïò¨Î∞îÎ•∏ÏßÄ Í≤ÄÏ¶ùÌï©ÎãàÎã§",
        keywords: ["uuid", "Í≤ÄÏ¶ù", "validator", "ÌôïÏù∏", "Ïú†Ìö®ÏÑ±", "Ê§úË®º"],
      },
      {
        href: "/escape-converter",
        label: "Ïù¥Ïä§ÏºÄÏù¥ÌîÑ Î¨∏Ïûê Î≥ÄÌôòÍ∏∞",
        desc: "Î¨∏ÏûêÏó¥ÏùÑ Ïù¥Ïä§ÏºÄÏù¥ÌîÑ Î¨∏ÏûêÎ°ú Î≥ÄÌôòÌï©ÎãàÎã§",
        keywords: [
          "escape",
          "Ïù¥Ïä§ÏºÄÏù¥ÌîÑ",
          "Î¨∏Ïûê",
          "Î≥ÄÌôò",
          "converter",
          "ÊñáÂ≠óÂàó",
          "Â§âÊèõ",
        ],
      },
    ],
    allToolsTitle: "Ï†ÑÏ≤¥ ÎèÑÍµ¨",
    tutorialTitle: "ÏÇ¨Ïö© Î∞©Î≤ï",
    tutorialSteps: [
      "ÏÇ¨Ïö©ÌïòÍ≥† Ïã∂ÏùÄ ÎèÑÍµ¨Î•º Í≤ÄÏÉâÌïòÍ±∞ÎÇò ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.",
      "ÏûÖÎ†•Ìï† Îç∞Ïù¥ÌÑ∞Î•º ÎÑ£ÏúºÏÑ∏Ïöî.",
      "Î≥ÄÌôò/Í≤ÄÏ¶ù Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÏÑ∏Ïöî.",
      "Í≤∞Í≥ºÎ•º Î≥µÏÇ¨Ìï¥ÏÑú ÌôúÏö©ÌïòÏÑ∏Ïöî.",
      "üåê Ïñ∏Ïñ¥ Î©îÎâ¥ÏóêÏÑú ÏÇ¨Ïù¥Ìä∏ Ïñ∏Ïñ¥Î•º Î≥ÄÍ≤ΩÌï† Ïàò ÏûàÏäµÎãàÎã§.",
      "ÏûêÏ£º Î¨ªÎäî ÏßàÎ¨∏(FAQ)ÏóêÏÑú Í∂ÅÍ∏àÌïú Ï†êÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî.",
    ],
    faqTitle: "ÏûêÏ£º Î¨ªÎäî ÏßàÎ¨∏",
    faq: [
      {
        q: "Ïù¥ ÏÇ¨Ïù¥Ìä∏Îäî Î¨¥Î£åÎ°ú ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎÇòÏöî?",
        a: "ÎÑ§, ÏôÑÏ†ÑÌûà Î¨¥Î£åÏûÖÎãàÎã§.",
      },
      {
        q: "Î™®Î∞îÏùºÏóêÏÑúÎèÑ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎÇòÏöî?",
        a: "ÎÑ§, Ïù¥ ÏÇ¨Ïù¥Ìä∏Îäî Î∞òÏùëÌòïÏúºÎ°ú Ï†úÏûëÎêòÏñ¥ Î™®Î∞îÏùºÏóêÏÑúÎèÑ Ïûò ÏûëÎèôÌï©ÎãàÎã§.",
      },
      {
        q: "ÎèÑÍµ¨Î•º ÏÇ¨Ïö©ÌïòÎ†§Î©¥ ÌöåÏõêÍ∞ÄÏûÖÏù¥ ÌïÑÏöîÌïúÍ∞ÄÏöî?",
        a: "ÏïÑÎãàÏöî, Í≥ÑÏ†ï ÏóÜÏù¥ÎèÑ Î™®Îì† ÎèÑÍµ¨Î•º ÏÇ¨Ïö©Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
      },
      {
        q: "Ï†úÍ∞Ä ÏûÖÎ†•Ìïú Îç∞Ïù¥ÌÑ∞Í∞Ä Ï†ÄÏû•ÎêòÎÇòÏöî?",
        a: "ÏïÑÎãàÏöî, Î™®Îì† ÎèôÏûëÏùÄ Î∏åÎùºÏö∞Ï†ÄÏóêÏÑúÎßå Ïã§ÌñâÎêòÎ©∞ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÄÏû•ÌïòÏßÄ ÏïäÏäµÎãàÎã§.",
      },
      {
        q: "Í≤∞Í≥ºÎ•º Îã§Î•∏ ÏÇ¨ÎûåÍ≥º Í≥µÏú†Ìï† Ïàò ÏûàÎÇòÏöî?",
        a: "ÎÑ§, Í≤∞Í≥ºÎ•º Î≥µÏÇ¨ÌïòÏó¨ ÏûêÏú†Î°≠Í≤å Í≥µÏú†Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
      },
      {
        q: "ÏïûÏúºÎ°ú Îçî ÎßéÏùÄ ÎèÑÍµ¨Í∞Ä Ï∂îÍ∞ÄÎêòÎÇòÏöî?",
        a: "ÎÑ§, ÏßÄÏÜçÏ†ÅÏúºÎ°ú ÏÉàÎ°úÏö¥ Ïú†Ìã∏Î¶¨Ìã∞ÏôÄ Í∏∞Îä•ÏùÑ Ï∂îÍ∞ÄÌï† ÏòàÏ†ïÏûÖÎãàÎã§.",
      },
    ],
    asciiToText: {
      title: "ASCII ‚Üí Text Î≥ÄÌôòÍ∏∞",
      placeholder: "Ïòà: 72 101 108 108 111 ",
      button: "Î≥ÄÌôò",
      tutorial: {
        title: "ÏÇ¨Ïö© Î∞©Î≤ï",
        steps: [
          "Î≥ÄÌôòÌï† ASCII ÏΩîÎìú(Ïà´Ïûê)Î•º ÏûÖÎ†•Ìï©ÎãàÎã§. (Ïòà: 72 101 108 108 111)",
          "Í∞Å Ïà´ÏûêÎäî Í≥µÎ∞±, ÏâºÌëú, ÏÑ∏ÎØ∏ÏΩúÎ°† Îì±ÏúºÎ°ú Íµ¨Î∂ÑÌï† Ïàò ÏûàÏäµÎãàÎã§.",
          '"Î≥ÄÌôò" Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Ìï¥Îãπ ASCII ÏΩîÎìúÍ∞Ä ÌÖçÏä§Ìä∏Î°ú Î≥ÄÌôòÎê©ÎãàÎã§.',
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÎàåÎü¨ ÌÖçÏä§Ìä∏Î•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          '"Î¶¨ÏÖã" Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Î™®Îëê Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§.',
        ],
      },
    },
    baseConverter: {
      title: "ÏßÑÏàò Î≥ÄÌôòÍ∏∞",
      inputBaseLabel: "ÏûÖÎ†• ÏßÑÏàò ÏÑ†ÌÉù",
      inputPlaceholder: "Í∞íÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî",
      convertButton: "Î≥ÄÌôò",
      errorInvalidInput: "ÏûÖÎ†• Í∞íÏù¥ ÏÑ†ÌÉùÌïú ÏßÑÏàòÏóê ÎßûÏßÄ ÏïäÏäµÎãàÎã§.",
      options: {
        "2": "2ÏßÑÏàò",
        "8": "8ÏßÑÏàò",
        "10": "10ÏßÑÏàò",
        "16": "16ÏßÑÏàò",
        "32": "32ÏßÑÏàò",
      },
      resultLabels: {
        binary: "2ÏßÑÏàò",
        octal: "8ÏßÑÏàò",
        decimal: "10ÏßÑÏàò",
        hex: "16ÏßÑÏàò",
        base32: "32ÏßÑÏàò",
      },
      invalidValue: "‚ùå ÏûòÎ™ªÎêú ÏûÖÎ†•",
      tutorial: {
        title: "ÏÇ¨Ïö© Î∞©Î≤ï",
        steps: [
          "ÏûÖÎ†• ÏßÑÎ≤ï(2, 8, 10, 16, 32 Ï§ë ÌïòÎÇò)ÏùÑ ÏÑ†ÌÉùÌï©ÎãàÎã§.",
          "ÏÑ†ÌÉùÌïú ÏßÑÎ≤ïÏóê ÎßûÎäî Ïà´ÏûêÎ•º ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "„ÄåÎ≥ÄÌôòÌïòÍ∏∞„Äç Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ 2ÏßÑÏàò, 8ÏßÑÏàò, 10ÏßÑÏàò, 16ÏßÑÏàò, 32ÏßÑÏàò Í≤∞Í≥ºÍ∞Ä ÌëúÏãúÎê©ÎãàÎã§.",
          "Í∞Å Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÎàåÎü¨ Ìï¥Îãπ Í∞íÏùÑ ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "„ÄåÎ¶¨ÏÖã„Äç Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Î™®Îì† ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§.",
        ],
      },
    },
    base64EncoderDecoder: {
      title: "Base64 Ïù∏ÏΩîÎî©/ÎîîÏΩîÎî©",
      inputPlaceholder: "Ïù∏ÏΩîÎî©/ÎîîÏΩîÎî©Ìï† Î¨∏ÏûêÏó¥ ÏûÖÎ†•",
      encodeButton: "Ïù∏ÏΩîÎî©",
      decodeButton: "ÎîîÏΩîÎî©",
      encodeResultLabel: "Ïù∏ÏΩîÎî© Í≤∞Í≥º",
      decodeResultLabel: "ÎîîÏΩîÎî© Í≤∞Í≥º",
      encodeError: "‚ö†Ô∏è Ïù∏ÏΩîÎî© Ïã§Ìå® (Ïú†Ìö®Ìïú Î¨∏ÏûêÏó¥Ïù∏ÏßÄ ÌôïÏù∏)",
      decodeError: "‚ö†Ô∏è ÎîîÏΩîÎî© Ïã§Ìå® (Ïú†Ìö®Ìïú Base64 Î¨∏ÏûêÏó¥Ïù∏ÏßÄ ÌôïÏù∏)",
      tutorial: {
        title: "ÏÇ¨Ïö© Î∞©Î≤ï",
        steps: [
          "Î≥ÄÌôòÌï† ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "‚ÄòÏù∏ÏΩîÎìú‚Äô Î≤ÑÌäºÏùÑ ÎàÑÎ•¥Î©¥ ÌÖçÏä§Ìä∏Í∞Ä Base64 ÌòïÏãùÏúºÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "‚ÄòÎîîÏΩîÎìú‚Äô Î≤ÑÌäºÏùÑ ÎàÑÎ•¥Î©¥ Base64 Î¨∏ÏûêÏó¥Ïù¥ ÏõêÎûò ÌÖçÏä§Ìä∏Î°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏúºÎ°ú Í≤∞Í≥ºÎ•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "‚ÄòÎ¶¨ÏÖã‚Äô Î≤ÑÌäºÏùÑ ÎàÑÎ•¥Î©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§.",
        ],
      },
    },
    caseConverter: {
      title: "Case Î≥ÄÌôòÍ∏∞",
      placeholder: "ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî...",
      buttons: {
        upper: "ÎåÄÎ¨∏Ïûê",
        lower: "ÏÜåÎ¨∏Ïûê",
        snake: "Ïä§ÎÑ§Ïù¥ÌÅ¨ ÏºÄÏù¥Ïä§",
        camel: "Ïπ¥Î©ú ÏºÄÏù¥Ïä§",
      },
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÎûÄÏóê ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "‚ÄòÎåÄÎ¨∏Ïûê‚Äô Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Î™®Îì† Î¨∏ÏûêÍ∞Ä ÎåÄÎ¨∏ÏûêÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "‚ÄòÏÜåÎ¨∏Ïûê‚Äô Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Î™®Îì† Î¨∏ÏûêÍ∞Ä ÏÜåÎ¨∏ÏûêÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "‚ÄòÏä§ÎÑ§Ïù¥ÌÅ¨ ÏºÄÏù¥Ïä§‚Äô Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Îã®Ïñ¥Í∞Ä Ïñ∏ÎçîÏä§ÏΩîÏñ¥Î°ú Ïó∞Í≤∞Îêú ÏÜåÎ¨∏Ïûê ÌòïÏãùÏúºÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "‚ÄòÏπ¥Î©ú ÏºÄÏù¥Ïä§‚Äô Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Ï≤´ Îã®Ïñ¥Îäî ÏÜåÎ¨∏Ïûê, Ïù¥ÌõÑ Îã®Ïñ¥Îäî Ï≤´ Í∏ÄÏûêÍ∞Ä ÎåÄÎ¨∏ÏûêÍ∞Ä ÎêòÎèÑÎ°ù Î≥ÄÌôòÎê©ÎãàÎã§.",
          "Í≤∞Í≥ºÎäî Ï∂úÎ†•ÎûÄÏóê ÌëúÏãúÎêòÎ©∞, Î≥µÏÇ¨ ÏïÑÏù¥ÏΩòÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Îê©ÎãàÎã§.",
          "‚ÄòÎ¶¨ÏÖã‚Äô Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§.",
        ],
      },
    },
    colorConverter: {
      title: "HEX -> RGB Î≥ÄÌôòÍ∏∞",
      title2: "RGB -> HEX Î≥ÄÌôòÍ∏∞",
      inputPlaceholder: "FFFFFF ÌòïÏãù ÏûÖÎ†•",
      inputHexPlaceholder: "FFFFFF ÌòïÏãù ÏûÖÎ†•",
      inputRgbPlaceholder: "255, 255, 255 ÌòïÏãù ÏûÖÎ†•",
      convertButton: "Î≥ÄÌôò",
      convertHexToRgbButton: "HEX ‚Üí RGB Î≥ÄÌôò",
      convertRgbToHexButton: "RGB ‚Üí HEX Î≥ÄÌôò",
      invalidHex: "Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ HEX ÏÉâÏÉÅÏûÖÎãàÎã§.",
      invalidRgb: "Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ RGB ÌòïÏãùÏûÖÎãàÎã§.",
      hexLabel: "HEX",
      rgbLabel: "RGB",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "HEX ÏÉâÏÉÅ ÏΩîÎìúÎ•º ÏûÖÎ†•ÎûÄÏóê ÏûÖÎ†•Ìï©ÎãàÎã§. (Ïòà: #FF5733 ÎòêÎäî F53)",
          "‚ÄòHEX ‚Üí RGB‚Äô Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ RGB ÌòïÏãùÏúºÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "RGB Í≤∞Í≥ºÎäî Ï∂úÎ†•ÎûÄÏóê ÌëúÏãúÎêòÎ©∞, Î≥µÏÇ¨ ÏïÑÏù¥ÏΩòÏúºÎ°ú ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "RGB Í∞íÏùÑ ÏûÖÎ†•ÎûÄÏóê ÏûÖÎ†•Ìï©ÎãàÎã§. (Ïòà: rgb(255, 87, 51) ÎòêÎäî 255,87,51)",
          "‚ÄòRGB ‚Üí HEX‚Äô Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ HEX ÌòïÏãùÏúºÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "HEX Í≤∞Í≥ºÎäî Ï∂úÎ†•ÎûÄÏóê ÌëúÏãúÎêòÎ©∞, Î≥µÏÇ¨ ÏïÑÏù¥ÏΩòÏúºÎ°ú ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "‚ÄòÎ¶¨ÏÖã‚Äô Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Î™®Îì† ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§.",
        ],
      },
    },
    hashGenerator: {
      title: "SHA-256 Ìï¥Ïãú ÏÉùÏÑ±Í∏∞",
      inputPlaceholder: "ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî...",
      generateButton: "Ìï¥Ïãú ÏÉùÏÑ±",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "Ìï¥ÏãúÎ•º ÏÉùÏÑ±Ìï† ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "'ÏÉùÏÑ±' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ SHA-256 Ìï¥ÏãúÍ∞Ä ÏÉùÏÑ±Îê©ÎãàÎã§.",
          "Í≤∞Í≥ºÎäî ÏïÑÎûò Î∞ïÏä§Ïóê 16ÏßÑÏàò Î¨∏ÏûêÏó¥Î°ú ÌëúÏãúÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Ìï¥ÏãúÎ•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "'Î¶¨ÏÖã' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    htmlEntities: {
      title: "HTML ÏóîÌã∞Ìã∞ Ïù∏ÏΩîÎî©/ÎîîÏΩîÎî©",
      inputPlaceholder: "Ïù∏ÏΩîÎî©/ÎîîÏΩîÎî©Ìï† Î¨∏ÏûêÏó¥ ÏûÖÎ†•",
      encodeButton: "Ïù∏ÏΩîÎî©",
      decodeButton: "ÎîîÏΩîÎî©",
      encodeResultLabel: "Ïù∏ÏΩîÎî© Í≤∞Í≥º",
      decodeResultLabel: "ÎîîÏΩîÎî© Í≤∞Í≥º",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "Î≥ÄÌôòÌï† ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "'Ïù∏ÏΩîÎìú' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ HTML ÏóîÌã∞Ìã∞Î°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "'ÎîîÏΩîÎìú' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ HTML ÏóîÌã∞Ìã∞Í∞Ä ÏùºÎ∞ò ÌÖçÏä§Ìä∏Î°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏúºÎ°ú Î≥ÄÌôòÎêú ÌÖçÏä§Ìä∏Î•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "'Î¶¨ÏÖã' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    jsonFormatter: {
      title: "JSON Ìè¨Îß∑ÌÑ∞",
      inputPlaceholder: '{"hello": "world"}',
      formatButton: "Ìè¨Îß∑ÌåÖ",
      invalidJson: "‚ö†Ô∏è Ïú†Ìö®Ìïú JSONÏù¥ ÏïÑÎãôÎãàÎã§.",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "JSON Îç∞Ïù¥ÌÑ∞Î•º ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "'Ìè¨Îß∑' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ JSONÏù¥ Î≥¥Í∏∞ Ï¢ãÍ≤å Îì§Ïó¨Ïì∞Í∏∞ÎêòÏñ¥ ÌëúÏãúÎê©ÎãàÎã§.",
          "ÏûÖÎ†•Í∞íÏù¥ Ïò¨Î∞îÎ•∏ JSONÏù¥ ÏïÑÎãàÎ©¥ Ïò§Î•ò Î©îÏãúÏßÄÍ∞Ä ÌëúÏãúÎê©ÎãàÎã§.",
          "'Î¶¨ÏÖã' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Ï∂úÎ†•Ïù¥ Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    randomPassword: {
      title: "ÎûúÎç§ ÎπÑÎ∞ÄÎ≤àÌò∏ ÏÉùÏÑ±Í∏∞",
      lengthLabel: "Í∏∏Ïù¥:",
      generateButton: "ÏÉùÏÑ±",
      lengthMin: 4,
      lengthMax: 50,
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "Ïà´Ïûê ÏûÖÎ†•ÎûÄÏóê ÏÉùÏÑ±Ìï† ÎπÑÎ∞ÄÎ≤àÌò∏ Í∏∏Ïù¥Î•º ÏßÄÏ†ïÌïòÏÑ∏Ïöî.",
          "ÏÉùÏÑ± Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÎûúÎç§Ìïú ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏïÑÎûòÏóê ÌëúÏãúÎê©ÎãàÎã§.",
          "Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÎàåÎü¨ ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    slugify: {
      title: "Slugify Î≥ÄÌôòÍ∏∞",
      inputPlaceholder: "Ïòà: Hello World! Next.js App",
      convertButton: "Î≥ÄÌôò",
      resultLabel: "Í≤∞Í≥º",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÏûÖÎ†•ÎûÄÏóê Î≥ÄÌôòÌï† Î¨∏Ïû•ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî.",
          "Î≥ÄÌôò Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Î¨∏Ïû•Ïù¥ URL ÏπúÌôîÏ†ÅÏù∏ Ïä¨Îü¨Í∑∏Î°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÎàåÎü¨ Ïä¨Îü¨Í∑∏Î•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    textToAscii: {
      title: "Text ‚Üí ASCII Î≥ÄÌôòÍ∏∞",
      inputPlaceholder: "Ïòà: Hello",
      convertButton: "Î≥ÄÌôò",
      resultLabel: "Í≤∞Í≥º",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÏûÖÎ†•ÎûÄÏóê Î≥ÄÌôòÌï† ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.",
          "Î≥ÄÌôò Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Í∞Å Î¨∏ÏûêÍ∞Ä ASCII ÏΩîÎìúÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÎàåÎü¨ ASCII ÏΩîÎìúÎ•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    timestampConverter: {
      title: "ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ ‚Üí ÎÇ†Ïßú Î≥ÄÌôòÍ∏∞",
      title2: "ÎÇ†Ïßú ‚Üí ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ Î≥ÄÌôòÍ∏∞",
      timestampPlaceholder: "Ïòà: 1721456861",
      datePlaceholder: "Ïòà: 2025-07-20T12:00:00Z",
      toDateButton: "ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ ‚Üí ÎÇ†Ïßú",
      toTimestampButton: "ÎÇ†Ïßú ‚Üí ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ",
      dateLabel: "ÎÇ†Ïßú",
      timestampLabel: "ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ",
      invalidTimestamp: "Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ",
      invalidDate: "Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ ÎÇ†Ïßú",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑÎ•º ÏûÖÎ†•ÌïòÍ≥† 'Date Î≥ÄÌôò' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Ìï¥Îãπ ÏãúÍ∞ÑÏùÑ ISO ÌòïÏãùÏúºÎ°ú Î≥ÄÌôòÌï©ÎãàÎã§.",
          "ÎÇ†ÏßúÎ•º ÏûÖÎ†•ÌïòÍ≥† 'Timestamp Î≥ÄÌôò' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Ïú†ÎãâÏä§ ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏúºÎ°ú Î≥ÄÌôò Í≤∞Í≥ºÎ•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    urlEncoderDecoder: {
      title: "URL Ïù∏ÏΩîÎî©/ÎîîÏΩîÎî©",
      inputPlaceholder: "Ïù∏ÏΩîÎî©/ÎîîÏΩîÎî©Ìï† Î¨∏ÏûêÏó¥ ÏûÖÎ†•",
      encodeButton: "Ïù∏ÏΩîÎî©",
      decodeButton: "ÎîîÏΩîÎî©",
      encodedLabel: "Ïù∏ÏΩîÎî© Í≤∞Í≥º",
      decodedLabel: "ÎîîÏΩîÎî© Í≤∞Í≥º",
      encodeError: "‚ö†Ô∏è Ïù∏ÏΩîÎî© Ïã§Ìå®",
      decodeError: "‚ö†Ô∏è ÎîîÏΩîÎî© Ïã§Ìå®",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÏûÖÎ†•Ï∞ΩÏóê ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "'Ïù∏ÏΩîÎî©' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ URL-safe ÌòïÏãùÏúºÎ°ú Ïù∏ÏΩîÎî©Îê©ÎãàÎã§.",
          "'ÎîîÏΩîÎî©' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ URL Ïù∏ÏΩîÎî©Îêú Î¨∏ÏûêÏó¥Ïù¥ ÏõêÎûò ÌÖçÏä§Ìä∏Î°ú Î≥µÏõêÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏúºÎ°ú Ïù∏ÏΩîÎî©/ÎîîÏΩîÎî© Í≤∞Í≥ºÎ•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    uuidGenerator: {
      title: "UUID ÏÉùÏÑ±Í∏∞",
      generateButton: "ÏÉà UUID ÏÉùÏÑ±",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÏÉùÏÑ±Ìï† UUID Î≤ÑÏ†ÑÏùÑ ÏÑ†ÌÉùÌï©ÎãàÎã§ (v1, v3, v4, v5).",
          "ÏÑ†ÌÉù ÌõÑ 'ÏÉùÏÑ±' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ UUIDÍ∞Ä ÏÉùÏÑ±Îê©ÎãàÎã§.",
          "ÏÉùÏÑ±Îêú UUIDÎäî Í≤∞Í≥º ÏòÅÏó≠Ïóê ÌëúÏãúÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÅÏó≠ ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÏó¨ ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏÉùÏÑ±Îêú UUIDÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    wordCounter: {
      title: "Îã®Ïñ¥ Î∞è Í∏ÄÏûê Ïàò ÏÑ∏Í∏∞",
      placeholder: "ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî...",
      wordLabel: "Îã®Ïñ¥ Ïàò",
      charLabel: "Í∏ÄÏûê Ïàò",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÌÖçÏä§Ìä∏ ÏòÅÏó≠Ïóê ÏõêÌïòÎäî Î¨∏Ïû•ÏùÑ ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "ÏûÖÎ†•Ìïú ÌÖçÏä§Ìä∏Ïùò Îã®Ïñ¥ ÏàòÏôÄ Î¨∏Ïûê ÏàòÍ∞Ä ÏïÑÎûòÏóêÏÑú Ïã§ÏãúÍ∞ÑÏúºÎ°ú ÌëúÏãúÎê©ÎãàÎã§.",
          "Í∞Å Ïà´Ïûê ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÎàåÎü¨ Îã®Ïñ¥ Ïàò ÎòêÎäî Î¨∏Ïûê ÏàòÎ•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÌÖçÏä§Ìä∏ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    actionButtons: {
      backButton: "Îí§Î°ú Í∞ÄÍ∏∞",
      resetButton: "Î¶¨ÏÖã",
    },
    qrCodeGenerator: {
      title: "QR ÏΩîÎìú ÏÉùÏÑ±Í∏∞",
      inputPlaceholder: "QR ÏΩîÎìúÎ°ú ÎßåÎì§ ÌÖçÏä§Ìä∏ÎÇò URLÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî",
      generateButton: "QR ÏΩîÎìú ÏÉùÏÑ±",
      downloadButton: "Îã§Ïö¥Î°úÎìú",
      actionButtons: { reset: "Ï¥àÍ∏∞Ìôî" },
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÏûÖÎ†•ÎûÄÏóê QR ÏΩîÎìúÎ°ú Î≥ÄÌôòÌï† ÌÖçÏä§Ìä∏Î•º ÏûëÏÑ±ÌïòÏÑ∏Ïöî.",
          "QR ÏΩîÎìú ÏÉùÏÑ± Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏïÑÎûòÏóê QR ÏΩîÎìúÍ∞Ä ÌëúÏãúÎê©ÎãàÎã§.",
          "Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÎàåÎü¨ ÌÖçÏä§Ìä∏Î•º Î≥µÏÇ¨ÌïòÍ±∞ÎÇò, Îã§Ïö¥Î°úÎìú Î≤ÑÌäºÏúºÎ°ú SVG ÌååÏùºÏùÑ Ï†ÄÏû•Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    regexTester: {
      title: "Ï†ïÍ∑úÏãù ÌÖåÏä§Ìä∏",
      patternPlaceholder: "Ï†ïÍ∑úÏãù Ìå®ÌÑ¥ (Ïòà: \\d+)",
      textPlaceholder: "ÌÖåÏä§Ìä∏Ìï† ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî",
      testButton: "ÌÖåÏä§Ìä∏",
      invalidRegex: "Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ Ï†ïÍ∑úÏãùÏûÖÎãàÎã§",
      noMatch: "ÏùºÏπòÌïòÎäî Ìï≠Î™©Ïù¥ ÏóÜÏäµÎãàÎã§",
      resultLabel: "Í≤∞Í≥º",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "Ìå®ÌÑ¥ ÏûÖÎ†•ÎûÄÏóê ÌÖåÏä§Ìä∏Ìï† Ï†ïÍ∑úÏãùÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî.",
          "ÌÖçÏä§Ìä∏ ÏûÖÎ†•ÎûÄÏóê ÎåÄÏÉÅ Î¨∏ÏûêÏó¥ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî.",
          "ÌÖåÏä§Ìä∏ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Îß§Ïπ≠ÎêòÎäî Í≤∞Í≥ºÍ∞Ä ÏïÑÎûòÏóê ÌëúÏãúÎê©ÎãàÎã§.",
          "Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÎàåÎü¨ Í≤∞Í≥ºÎ•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    loremIpsum: {
      title: "Lorem Ipsum ÏÉùÏÑ±Í∏∞",
      paragraphsLabel: "Î¨∏Îã® Ïàò",
      generateButton: "ÏÉùÏÑ±ÌïòÍ∏∞",
      resultLabel: "Í≤∞Í≥º",
      noResult: "ÏïÑÏßÅ ÏÉùÏÑ±ÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÏÉùÏÑ±Ìï† Îã®ÎùΩ ÏàòÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.",
          "ÏÉùÏÑ± Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Lorem Ipsum ÌÖçÏä§Ìä∏Í∞Ä ÏßÄÏ†ïÌïú Îã®ÎùΩ ÏàòÎßåÌÅº ÏÉùÏÑ±Îê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÅÏó≠ÏóêÏÑú ÌÖçÏä§Ìä∏Î•º ÌôïÏù∏ÌïòÍ≥†, Î≥µÏÇ¨ Î≤ÑÌäºÏúºÎ°ú Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    wikiSummary: {
      title: "ÏúÑÌÇ§Î∞±Í≥º ÏöîÏïΩÍ∏∞",
      inputPlaceholder: "Í≤ÄÏÉâÌï† Ìï≠Î™© ÏûÖÎ†• (Ïòà: ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏)",
      searchButton: "Í≤ÄÏÉâ",
      resultLabel: "ÏöîÏïΩ",
      noResult: "ÏïÑÏßÅ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§",
      notFound: "Í≤∞Í≥ºÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§",
      error: "ÏöîÏïΩÏùÑ Í∞ÄÏ†∏Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "Í≤ÄÏÉâÌï† ÏúÑÌÇ§ÌîºÎîîÏïÑ Ï£ºÏ†úÎ•º ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "'Í≤ÄÏÉâ' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Ìï¥Îãπ Ï£ºÏ†úÏùò ÏöîÏïΩ Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏ÏòµÎãàÎã§.",
          "ÏöîÏïΩÏù¥ Ï°¥Ïû¨ÌïòÎ©¥ Í≤∞Í≥º ÏòÅÏó≠Ïóê ÌëúÏãúÎê©ÎãàÎã§.",
          "ÏöîÏïΩÏù¥ ÏóÜÏúºÎ©¥ 'Ï∞æÏùÑ Ïàò ÏóÜÏùå' Î©îÏãúÏßÄÍ∞Ä ÌëúÏãúÎê©ÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    timeDiff: {
      title: "ÏãúÍ∞Ñ Ï∞®Ïù¥ Í≥ÑÏÇ∞Í∏∞",
      calculateButton: "Ï∞®Ïù¥ Í≥ÑÏÇ∞",
      resultLabel: "Í≤∞Í≥º",
      invalidDate: "Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ ÎÇ†ÏßúÏûÖÎãàÎã§.",
      noResult: "ÏïÑÏßÅ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.",
      day: "Ïùº",
      hour: "ÏãúÍ∞Ñ",
      minute: "Î∂Ñ",
      second: "Ï¥à",
      actionButtons: { reset: "Ï¥àÍ∏∞Ìôî" },
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÏãúÏûë ÎÇ†ÏßúÏôÄ ÏãúÍ∞ÑÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî.",
          "Ï¢ÖÎ£å ÎÇ†ÏßúÏôÄ ÏãúÍ∞ÑÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî.",
          "Í≥ÑÏÇ∞ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Îëê ÎÇ†Ïßú ÏÇ¨Ïù¥Ïùò Ïùº, ÏãúÍ∞Ñ, Î∂Ñ, Ï¥à Ï∞®Ïù¥Î•º Î≥¥Ïó¨Ï§çÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏúºÎ°ú Í≥ÑÏÇ∞ Í≤∞Í≥ºÎ•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    diffChecker: {
      title: "Ï∞®Ïù¥ ÎπÑÍµêÍ∏∞",
      inputPlaceholderA: "Ï≤´ Î≤àÏß∏ ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî",
      inputPlaceholderB: "Îëê Î≤àÏß∏ ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî",
      compareButton: "ÎπÑÍµêÌïòÍ∏∞",
      resultLabel: "Í≤∞Í≥º",
      noDifference: "Ï∞®Ïù¥Í∞Ä ÏóÜÏäµÎãàÎã§",
      actionButtons: {
        backButton: "Îí§Î°ú",
        resetButton: "Î¶¨ÏÖã",
      },
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÎπÑÍµêÌï† ÌÖçÏä§Ìä∏ AÏôÄ ÌÖçÏä§Ìä∏ BÎ•º Í∞ÅÍ∞Å ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "'ÎπÑÍµê' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Îëê ÌÖçÏä§Ìä∏Ïùò Ï∞®Ïù¥Ï†êÏùÑ ÌôïÏù∏Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Ï∞®Ïù¥ÎÇòÎäî Î∂ÄÎ∂ÑÏùÄ '-'ÏôÄ '+'Î°ú ÌëúÏãúÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Í≤∞Í≥ºÎ•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "'Î¶¨ÏÖã' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    markdownToHtml: {
      title: "Markdown ‚Üí HTML Î≥ÄÌôòÍ∏∞",
      inputPlaceholder: "ÎßàÌÅ¨Îã§Ïö¥ ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî",
      convertButton: "Î≥ÄÌôòÌïòÍ∏∞",
      resultLabel: "Í≤∞Í≥º",
      noResult: "Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§",
      actionButtons: {
        backButton: "Îí§Î°ú",
        resetButton: "Î¶¨ÏÖã",
      },
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÎßàÌÅ¨Îã§Ïö¥ ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÎûÄÏóê ÏûëÏÑ±ÌïòÏÑ∏Ïöî.",
          "Î≥ÄÌôò Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Ìïú ÎßàÌÅ¨Îã§Ïö¥Ïù¥ HTMLÎ°ú Î†åÎçîÎßÅÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÅÏó≠ÏóêÏÑú Î†åÎçîÎßÅÎêú HTMLÏùÑ ÌôïÏù∏ÌïòÍ≥†, Î≥µÏÇ¨ Î≤ÑÌäºÏúºÎ°ú Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    jwtEncoderDecoder: {
      title: "JWT ÎîîÏΩîÎçî/Ïù∏ÏΩîÎçî",
      inputPlaceholder:
        'ÎîîÏΩîÎî©Ìï† JWT ÎòêÎäî Ïù∏ÏΩîÎî©Ìï† JSON ÏûÖÎ†•\n(Ïù∏ÏΩîÎî© Ïãú {"header": {...}, "payload": {...}} ÌòïÌÉú)',
      decodeButton: "ÎîîÏΩîÎî©",
      encodeButton: "Ïù∏ÏΩîÎî©",
      invalidJwt: "Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ JWT ÌòïÏãùÏûÖÎãàÎã§.",
      invalidBase64: "Base64 ÎîîÏΩîÎî© Ïã§Ìå®",
      decodeError: "ÎîîÏΩîÎî© Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.",
      encodeFormatError:
        "Ïù∏ÏΩîÎî©Ìï† JSONÏóê headerÏôÄ payloadÍ∞Ä Î™®Îëê Ìè¨Ìï®ÎêòÏñ¥Ïïº Ìï©ÎãàÎã§.",
      encodeError: "Ïù∏ÏΩîÎî© Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.",
      outputLabel: "Í≤∞Í≥º",
      noOutput: "Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "JWT Î¨∏ÏûêÏó¥ÏùÑ ÏûÖÎ†•ÌïòÎ©¥ ÎîîÏΩîÎî© Í≤∞Í≥ºÎ•º ÌôïÏù∏Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "ÎîîÏΩîÎî© Ïãú HeaderÏôÄ PayloadÎ•º Î≥¥Í∏∞ Ï¢ãÍ≤å JSON ÌòïÏãùÏúºÎ°ú Ï∂úÎ†•Ìï©ÎãàÎã§.",
          "Ïù∏ÏΩîÎî©ÏùÑ ÌïòÎ†§Î©¥ JSON ÌòïÏãùÏúºÎ°ú { header: {...}, payload: {...} } Íµ¨Ï°∞Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.",
          "Ïù∏ÏΩîÎî© Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ base64url ÌòïÏãùÏùò JWT Î¨∏ÏûêÏó¥Ïù¥ ÏÉùÏÑ±Îê©ÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Ï∂úÎ†•Ïù¥ Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    cssColorPalette: {
      title: "CSS Ïª¨Îü¨ ÌåîÎ†àÌä∏ ÏÉùÏÑ±Í∏∞",
      baseColorLabel: "Í∏∞Î≥∏ ÏÉâÏÉÅ ÏÑ†ÌÉù",
      generateButton: "ÌåîÎ†àÌä∏ ÏÉùÏÑ±",
      clickToCopy: "ÌÅ¥Î¶≠ÌïòÏó¨ ÏÉâÏÉÅ ÏΩîÎìú Î≥µÏÇ¨",
      actionButtons: {
        reset: "Ï¥àÍ∏∞Ìôî",
      },
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÏÉâÏÉÅ ÏÑ†ÌÉùÍ∏∞ÏóêÏÑú Í∏∞Î≥∏ ÏÉâÏÉÅÏùÑ ÏÑ†ÌÉùÌï©ÎãàÎã§.",
          "‚ÄòÌåîÎ†àÌä∏ ÏÉùÏÑ±‚Äô Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏÑ†ÌÉùÌïú ÏÉâÏÉÅÏùÑ Í∏∞Ï§ÄÏúºÎ°ú Î∞ùÍ∏∞ Ï°∞Ï†àÎêú ÏÉâÏÉÅ ÌåîÎ†àÌä∏Í∞Ä ÏÉùÏÑ±Îê©ÎãàÎã§.",
          "ÏÉùÏÑ±Îêú ÏÉâÏÉÅ ÌåîÎ†àÌä∏Îäî ÌôîÎ©¥Ïóê ÌëúÏãúÎê©ÎãàÎã§.",
          "Í∞Å ÏÉâÏÉÅ Î∏îÎ°ùÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ HEX ÏÉâÏÉÅ ÏΩîÎìúÍ∞Ä ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Îê©ÎãàÎã§.",
          "‚ÄòÎ¶¨ÏÖã‚Äô Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Í∏∞Î≥∏ ÏÉâÏÉÅÍ≥º ÌåîÎ†àÌä∏Í∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    csvJson: {
      title: "CSV ‚Üî JSON Î≥ÄÌôòÍ∏∞",
      inputPlaceholder: "CSV ÎòêÎäî JSON Îç∞Ïù¥ÌÑ∞Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî",
      convertToJsonButton: "JSONÏúºÎ°ú Î≥ÄÌôò",
      convertToCsvButton: "CSVÎ°ú Î≥ÄÌôò",
      convertError: "Î≥ÄÌôò Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.",
      resultLabel: "Î≥ÄÌôò Í≤∞Í≥º",
      noResult: "Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.",
      actionButtons: {
        reset: "Ï¥àÍ∏∞Ìôî",
      },
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "CSV ÎòêÎäî JSON Îç∞Ïù¥ÌÑ∞Î•º ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "'JSONÏúºÎ°ú Î≥ÄÌôò' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ CSVÍ∞Ä JSONÏúºÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "'CSVÎ°ú Î≥ÄÌôò' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ JSONÏù¥ CSVÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "Î≥ÄÌôò Í≤∞Í≥ºÎäî ÏïÑÎûò ÏòÅÏó≠Ïóê ÌëúÏãúÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Îê©ÎãàÎã§.",
          "‚ÄòÎ¶¨ÏÖã‚Äô Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    htmlTableGenerator: {
      title: "HTML ÌÖåÏù¥Î∏î ÏÉùÏÑ±Í∏∞",
      rowsPlaceholder: "Ìñâ Í∞úÏàò ÏûÖÎ†• (Ïòà: 3)",
      colsPlaceholder: "Ïó¥ Í∞úÏàò ÏûÖÎ†• (Ïòà: 4)",
      generateButton: "ÌÖåÏù¥Î∏î ÏÉùÏÑ±",
      resetButton: "Î¶¨ÏÖã",
      resultLabel: "ÏÉùÏÑ±Îêú HTML ÌÖåÏù¥Î∏î ÏΩîÎìú",
      errorInvalidNumber: "Ïò¨Î∞îÎ•∏ Ïà´ÏûêÎ•º ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî (1 Ïù¥ÏÉÅ).",
      noResult: "Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.",
      actionButtons: {
        reset: "Ï¥àÍ∏∞Ìôî",
      },
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÌÖåÏù¥Î∏îÏùò Ìñâ(Row)Í≥º Ïó¥(Column) ÏàòÎ•º ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "'ÏÉùÏÑ±' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ HTML ÌÖåÏù¥Î∏î ÏΩîÎìúÍ∞Ä ÏÉùÏÑ±Îê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÎàåÎü¨ ÏÉùÏÑ±Îêú HTML ÏΩîÎìúÎ•º ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "'Î¶¨ÏÖã' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    httpStatus: {
      title: "HTTP ÏÉÅÌÉú ÏΩîÎìú ÏÑ§Î™ÖÍ∏∞",
      inputPlaceholder: "Ïòà: 200, 404, 500...",
      checkButton: "ÌôïÏù∏",
      notFound: "Ïïå Ïàò ÏóÜÎäî ÏÉÅÌÉú ÏΩîÎìúÏûÖÎãàÎã§.",
      noResult: "ÏÑ§Î™ÖÏùÑ ÌôïÏù∏ÌïòÎ†§Î©¥ ÏÉÅÌÉú ÏΩîÎìúÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "HTTP ÏÉÅÌÉú ÏΩîÎìúÎ•º ÏûÖÎ†•Ìï©ÎãàÎã§ (Ïòà: 200, 404 Îì±).",
          "'ÌôïÏù∏' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Ìï¥Îãπ ÏΩîÎìúÏùò ÏÑ§Î™ÖÏù¥ ÌëúÏãúÎê©ÎãàÎã§.",
          "ÏÑ§Î™ÖÏù¥ ÏóÜÏúºÎ©¥ 'Ï∞æÏùÑ Ïàò ÏóÜÏùå' Î©îÏãúÏßÄÍ∞Ä ÌëúÏãúÎê©ÎãàÎã§.",
          "'Î¶¨ÏÖã' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    urlQueryParser: {
      title: "URL ÏøºÎ¶¨ ÌååÏÑú/ÎπåÎçî",
      inputPlaceholder: "URL ÎòêÎäî ?key=value&key2=value2 ÌòïÌÉúÎ•º ÏûÖÎ†•",
      parseButton: "ÏøºÎ¶¨ ÌååÏã±",
      editParamsLabel: "ÌååÏã±Îêú ÌååÎùºÎØ∏ÌÑ∞ ÏàòÏ†ï",
      buildButton: "ÏøºÎ¶¨ Î¨∏ÏûêÏó¥ ÏÉùÏÑ±",
      buildResultLabel: "ÏÉùÏÑ±Îêú ÏøºÎ¶¨ Î¨∏ÏûêÏó¥",
      parseError: "ÌååÏã± Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "ÏûÖÎ†•Ï∞ΩÏóê URL ÎòêÎäî ÏøºÎ¶¨ Î¨∏ÏûêÏó¥ÏùÑ ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "'ÌååÏã±' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏøºÎ¶¨ ÌååÎùºÎØ∏ÌÑ∞Í∞Ä ÌÇ§-Í∞í Í∞ùÏ≤¥Î°ú ÌëúÏãúÎê©ÎãàÎã§.",
          "ÌëúÏãúÎêú ÌååÎùºÎØ∏ÌÑ∞ Í∞íÏùÑ ÏßÅÏ†ë ÏàòÏ†ïÌï† Ïàò ÏûàÏäµÎãàÎã§.",
          "'ÎπåÎìú' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏàòÏ†ïÎêú ÌååÎùºÎØ∏ÌÑ∞Î°ú ÏÉàÎ°úÏö¥ ÏøºÎ¶¨ Î¨∏ÏûêÏó¥Ïù¥ ÏÉùÏÑ±Îê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜÏùò Î≥µÏÇ¨ Î≤ÑÌäºÏúºÎ°ú ÏÉùÏÑ±Îêú ÏøºÎ¶¨ Î¨∏ÏûêÏó¥ÏùÑ ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    uuidValidator: {
      title: "UUID Í≤ÄÏ¶ùÍ∏∞",
      inputPlaceholder:
        "UUIDÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî (Ïòà: 123e4567-e89b-12d3-a456-426614174000)",
      validateButton: "Í≤ÄÏ¶ùÌïòÍ∏∞",
      validResult: "Ïú†Ìö®Ìïú UUIDÏûÖÎãàÎã§!",
      invalidResult: "ÏûòÎ™ªÎêú UUID ÌòïÏãùÏûÖÎãàÎã§.",
      versionLabel: "UUID Î≤ÑÏ†Ñ",
      invalid: "Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ UUIDÏûÖÎãàÎã§.",
      tutorial: {
        title: "ÏÇ¨Ïö©Î≤ï",
        steps: [
          "Í≤ÄÏ¶ùÌï† UUIDÎ•º ÏûÖÎ†•Ìï©ÎãàÎã§.",
          "'Í≤ÄÏ¶ù' Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Ìïú UUIDÍ∞Ä Ïú†Ìö®ÌïúÏßÄ ÌôïÏù∏Ìï©ÎãàÎã§.",
          "Ïú†Ìö®ÌïòÎ©¥ Í≤∞Í≥º ÏòÅÏó≠Ïóê 'Ïú†Ìö®Ìï®'Ïù¥ ÌëúÏãúÎêòÍ≥† UUID Î≤ÑÏ†ÑÎèÑ ÌôïÏù∏Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "Ïú†Ìö®ÌïòÏßÄ ÏïäÏúºÎ©¥ 'Ïú†Ìö®ÌïòÏßÄ ÏïäÏùå'Ïù¥ ÌëúÏãúÎê©ÎãàÎã§.",
          "Î¶¨ÏÖã Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏûÖÎ†•Í≥º Í≤∞Í≥ºÍ∞Ä Ï¥àÍ∏∞ÌôîÎê©ÎãàÎã§„ÄÇ",
        ],
      },
    },
    escapeConverter: {
      title: "Ïù¥Ïä§ÏºÄÏù¥ÌîÑ Î¨∏Ïûê Î≥ÄÌôòÍ∏∞",
      inputPlaceholder: "ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî...",
      convertButton: "Î≥ÄÌôò",
      resultLabel: "Í≤∞Í≥º",
      resetButton: "Ï¥àÍ∏∞Ìôî",
      tutorial: {
        title: "ÏÇ¨Ïö© Î∞©Î≤ï",
        steps: [
          "ÏúÑ ÌÖçÏä§Ìä∏ Î∞ïÏä§Ïóê Î≥ÄÌôòÌï† Î¨∏ÏûêÏó¥ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî.",
          "‚ÄòÎ≥ÄÌôò‚Äô Î≤ÑÌäºÏùÑ ÎàÑÎ•¥Î©¥ Î¨∏ÏûêÏó¥Ïù¥ Ïù¥Ïä§ÏºÄÏù¥ÌîÑ Î¨∏ÏûêÎ°ú Î≥ÄÌôòÎê©ÎãàÎã§.",
          "Í≤∞Í≥º ÏòÜ Î≥µÏÇ¨ Î≤ÑÌäºÏùÑ ÎàåÎü¨ ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
          "‚ÄòÏ¥àÍ∏∞Ìôî‚Äô Î≤ÑÌäºÏúºÎ°ú ÏûÖÎ†•Í≥º Í≤∞Í≥ºÎ•º Î™®Îëê Ï¥àÍ∏∞ÌôîÌï† Ïàò ÏûàÏäµÎãàÎã§.",
        ],
      },
    },
  },
} as const;
